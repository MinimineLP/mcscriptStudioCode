{"version":3,"sources":["Contextmenu.js","Contextmenu.ts"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","exports","__esModule","$","require","Standartmenu_1","Util_1","pluginmanager_1","currentMousePos","x","y","document","mousemove","event","clientX","clientY","Contextmenu","_super","apply","arguments","setup","instance","api","addStylesheet","__dirname","ContextMenuAPI","registerAPI","start","stop","reload","Plugin","name","version","id","standartmenu","THIS","addElement","click","hide","mousedown","which","show","menu","empty","append","render","css","top","left","global","ContextMenu","ContextMenuPoint","ContextMenuPointBuildingOptions"],"mappings":"AAAA;;AACA,IAAIA,YAAa,aAAQ,UAAKA,SAAd,IAA6B,YAAY;AACrD,QAAIC,iBAAgB,uBAAUC,CAAV,EAAaC,CAAb,EAAgB;AAChCF,yBAAgBG,OAAOC,cAAP,IACX,EAAEC,WAAW,EAAb,cAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;AAAED,cAAEI,SAAF,GAAcH,CAAd;AAAkB,SAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AAAE,iBAAK,IAAIK,CAAT,IAAcL,CAAd;AAAiB,oBAAIA,EAAEM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,EAAEM,CAAF,IAAOL,EAAEK,CAAF,CAAP;AAA1C;AAAwD,SAF9E;AAGA,eAAOP,eAAcC,CAAd,EAAiBC,CAAjB,CAAP;AACH,KALD;AAMA,WAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;AACnBF,uBAAcC,CAAd,EAAiBC,CAAjB;AACA,iBAASO,EAAT,GAAc;AAAE,iBAAKC,WAAL,GAAmBT,CAAnB;AAAuB;AACvCA,UAAEU,SAAF,GAAcT,MAAM,IAAN,GAAaC,OAAOS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,GAAGE,SAAH,GAAeT,EAAES,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;AACH,KAJD;AAKH,CAZ2C,EAA5C;AAaAI,QAAQC,UAAR,GAAqB,IAArB;ACZA,IAAAC,IAAAC,QAAA,QAAA,CAAA;AACA,IAAAC,iBAAAD,QAAA,wBAAA,CAAA;AACA,IAAAE,SAAAF,QAAA,gBAAA,CAAA;AAKA,IAAAG,kBAAAH,QAAA,mCAAA,CAAA;AAEA,IAAII,kBAAkB,EAAEC,GAAG,CAAC,CAAN,EAASC,GAAG,CAAC,CAAb,EAAtB;AACAP,EAAEQ,QAAF,EAAYC,SAAZ,CAAsB,UAASC,KAAT,EAAc;AAClCL,oBAAgBC,CAAhB,GAAoBI,MAAMC,OAA1B;AACAN,oBAAgBE,CAAhB,GAAoBG,MAAME,OAA1B;AACD,CAHD;AAKA;;;;;;;;;;AAUA,IAAAC,cAAA,aAAA,UAAAC,MAAA,EAAA;AAAyC9B,cAAA6B,WAAA,EAAAC,MAAA;AAAzC,aAAAD,WAAA,GAAA;ADUQ,eAAOC,WAAW,IAAX,IAAmBA,OAAOC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;ACkDP;AAzDC;;;;;;;;;;;AAWAH,gBAAAjB,SAAA,CAAAqB,KAAA,GAAA,YAAA;AACEJ,oBAAYK,QAAZ,GAAuB,IAAvB;AAEA,aAAKC,GAAL,CAASC,aAAT,CAA0BC,YAAS,2BAAnC;AACA,YAAIF,MAAM,IAAIG,cAAJ,CAAmB,KAAKH,GAAxB,CAAV;AACA,aAAKA,GAAL,CAASI,WAAT,CAAqB,aAArB,EAAoCJ,GAApC;AACD,KAND;AAQA;;;;;;;;;;;AAWAN,gBAAAjB,SAAA,CAAA4B,KAAA,GAAA,YAAA,CAAU,CAAV;AAEA;;;;;;;;;;;AAWAX,gBAAAjB,SAAA,CAAA6B,IAAA,GAAA,YAAA,CAAS,CAAT;AAEA;;;;;;;;;;;AAWAZ,gBAAAjB,SAAA,CAAA8B,MAAA,GAAA,YAAA,CAAW,CAAX;AACF,WAAAb,WAAA;AA5DA,CAAA,CAAyCT,gBAAAuB,MAAzC,CAAA;ADmEA7B,QAAQ,SAAR,IAAqBe,WAArB;ACLA;;;;;;;;;;AAUA,IAAAS,iBAAA,aAAA,YAAA;AAQE;;;;;;;;;;;AAWA,aAAAA,cAAA,CAAYH,GAAZ,EAA0B;AAjB1B,aAAAS,IAAA,GAAe,aAAf;AACA,aAAAC,OAAA,GAAiB,OAAjB;AACA,aAAAC,EAAA,GAAa,aAAb;AAEA,aAAAC,YAAA,GAA4B7B,eAAA,SAAA,CAA5B;AAcE,aAAKiB,GAAL,GAAWA,GAAX;AACA,YAAIa,OAAO,IAAX;AACAb,YAAIc,UAAJ,CAAe,eAAY,KAAKH,EAAjB,GAAmB,kCAAlC;AACA9B,UAAEQ,QAAF,EAAY0B,KAAZ,CAAkB,YAAA;AAChBF,iBAAKG,IAAL;AACD,SAFD;AAGAnC,UAAEQ,QAAF,EAAY4B,SAAZ,CAAsB,UAAS1B,KAAT,EAAc;AAClC,gBAAIA,MAAM2B,KAAN,IAAe,CAAnB,EAAsBL,KAAKG,IAAL;AACvB,SAFD;AAGD;AAED;;;;;;;;;;;AAWAb,mBAAA1B,SAAA,CAAA0C,IAAA,GAAA,UAAKC,IAAL,EAAsB;AACpBvC,UAAE,MAAI,KAAK8B,EAAX,EAAiBU,KAAjB;AACAxC,UAAE,MAAI,KAAK8B,EAAX,EAAiBW,MAAjB,CAAwBF,KAAKG,MAAL,EAAxB;AACA1C,UAAE,MAAI,KAAK8B,EAAX,EAAiBQ,IAAjB;AACAtC,UAAE,MAAI,KAAK8B,EAAX,EAAiBa,GAAjB,CAAqB,EAAEC,KAAKvC,gBAAgBE,CAAvB,EAA0BsC,MAAMxC,gBAAgBC,CAAhD,EAArB;AACD,KALD;AAOA;;;;;;;;;;AAUAgB,mBAAA1B,SAAA,CAAAuC,IAAA,GAAA,YAAA;AACEnC,UAAE,MAAI,KAAK8B,EAAX,EAAiBU,KAAjB;AACAxC,UAAE,MAAI,KAAK8B,EAAX,EAAiBK,IAAjB;AACD,KAHD;AAIF,WAAAb,cAAA;AA/DA,CAAA,EAAA;AAiEAwB,OAAOC,WAAP,GAAqB5C,OAAA4C,WAArB;AACAD,OAAOxB,cAAP,GAAwBA,cAAxB;AACAwB,OAAOE,gBAAP,GAA0B7C,OAAA6C,gBAA1B;AACAF,OAAOG,+BAAP,GAAyC9C,OAAA8C,+BAAzC","file":"Contextmenu.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar $ = require(\"jquery\");\nvar Standartmenu_1 = require(\"./scripts/Standartmenu\");\nvar Util_1 = require(\"./scripts/Util\");\nvar pluginmanager_1 = require(\"@mcscriptstudiocode/pluginmanager\");\nvar currentMousePos = { x: -1, y: -1 };\n$(document).mousemove(function (event) {\n    currentMousePos.x = event.clientX;\n    currentMousePos.y = event.clientY;\n});\n/**\n * @class Contextmenu\n * @package MCScriptStudioCode Plugin api for Contextmenus\n * @author Minimine <https://github.com/miniminelp>\n * @since 0.0.1\n * @version 0.0.1\n *\n * @desc ContextMenu Plugin for mcscriptstudiocode\n *\n */\nvar Contextmenu = /** @class */ (function (_super) {\n    __extends(Contextmenu, _super);\n    function Contextmenu() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @function setup\n     * @package Contextmenu\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.1\n     * @version 0.0.1\n     *\n     * @desc The setup function is called for the setup\n     * @arg server:ServerApi the ServerApi gives usefull functions for the plugins\n     *\n     */\n    Contextmenu.prototype.setup = function () {\n        Contextmenu.instance = this;\n        this.api.addStylesheet(__dirname + \"/style/css/global.min.css\");\n        var api = new ContextMenuAPI(this.api);\n        this.api.registerAPI(\"contextmenu\", api);\n    };\n    /**\n     * @function start\n     * @package Contextmenu\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.1\n     * @version 0.0.1\n     *\n     * @desc the start function starts the plugins. Here you can manipulate elements etc...\n     * @arg server:ServerApi the ServerApi gives usefull functions for the plugins\n     *\n     */\n    Contextmenu.prototype.start = function () { };\n    /**\n     * @function stop\n     * @package Contextmenu\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.1\n     * @version 0.0.1\n     *\n     * @desc the stop function is called for program stop. this does not work always for now\n     * @arg server:ServerApi the ServerApi gives usefull functions for the plugins\n     *\n     */\n    Contextmenu.prototype.stop = function () { };\n    /**\n     * @function reload\n     * @package Contextmenu\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.1\n     * @version 0.0.1\n     *\n     * @desc the reload function is called on program stop. this does not work always for now\n     * @arg server:ServerApi the ServerApi gives usefull functions for the plugins\n     *\n     */\n    Contextmenu.prototype.reload = function () { };\n    return Contextmenu;\n}(pluginmanager_1.Plugin));\nexports[\"default\"] = Contextmenu;\n/**\n * @class ContextMenuAPI\n * @package Contextmenu\n * @author Minimine <https://github.com/miniminelp>\n * @since 0.0.1\n * @version 0.0.1\n *\n * @desc the api for other plugins\n *\n */\nvar ContextMenuAPI = /** @class */ (function () {\n    /**\n     * @function constructor\n     * @package Contextmenu\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.1\n     * @version 0.0.1\n     *\n     * @desc constructor for ContextMenuAPI\n     * @arg server:ServerApi the ServerApi gives usefull functions for the plugins\n     *\n     */\n    function ContextMenuAPI(api) {\n        this.name = \"contextmenu\";\n        this.version = \"0.0.1\";\n        this.id = \"contextmenu\";\n        this.standartmenu = Standartmenu_1[\"default\"];\n        this.api = api;\n        var THIS = this;\n        api.addElement(\"<div id=\\\"\" + this.id + \"\\\" style=\\\"display:none\\\"></div>\");\n        $(document).click(function () {\n            THIS.hide();\n        });\n        $(document).mousedown(function (event) {\n            if (event.which != 1)\n                THIS.hide();\n        });\n    }\n    /**\n     * @function show\n     * @package Contextmenu\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.1\n     * @version 0.0.1\n     *\n     * @desc Shows a contextmenu\n     * @arg menu:ContextMenu the menu to show\n     *\n     */\n    ContextMenuAPI.prototype.show = function (menu) {\n        $(\"#\" + this.id).empty();\n        $(\"#\" + this.id).append(menu.render());\n        $(\"#\" + this.id).show();\n        $(\"#\" + this.id).css({ top: currentMousePos.y, left: currentMousePos.x });\n    };\n    /**\n     * @function hide\n     * @package Contextmenu\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.1\n     * @version 0.0.1\n     *\n     * @desc Hides the contextmenu\n     *\n     */\n    ContextMenuAPI.prototype.hide = function () {\n        $(\"#\" + this.id).empty();\n        $(\"#\" + this.id).hide();\n    };\n    return ContextMenuAPI;\n}());\nglobal.ContextMenu = Util_1.ContextMenu;\nglobal.ContextMenuAPI = ContextMenuAPI;\nglobal.ContextMenuPoint = Util_1.ContextMenuPoint;\nglobal.ContextMenuPointBuildingOptions = Util_1.ContextMenuPointBuildingOptions;\n","declare let global: any;\r\n\r\nimport * as $ from \"jquery\";\r\nimport standartmenu from \"./scripts/Standartmenu\";\r\nimport {\r\n  ContextMenu,\r\n  ContextMenuPoint,\r\n  ContextMenuPointBuildingOptions\r\n} from \"./scripts/Util\";\r\nimport { Plugin, PluginApi, Api } from \"@mcscriptstudiocode/pluginmanager\";\r\n\r\nvar currentMousePos = { x: -1, y: -1 };\r\n$(document).mousemove(function(event) {\r\n  currentMousePos.x = event.clientX;\r\n  currentMousePos.y = event.clientY;\r\n});\r\n\r\n/**\r\n * @class Contextmenu\r\n * @package MCScriptStudioCode Plugin api for Contextmenus\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.1\r\n * @version 0.0.1\r\n *\r\n * @desc ContextMenu Plugin for mcscriptstudiocode\r\n *\r\n */\r\nexport default class Contextmenu extends Plugin {\r\n  static instance: Plugin;\r\n\r\n  /**\r\n   * @function setup\r\n   * @package Contextmenu\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.1\r\n   * @version 0.0.1\r\n   *\r\n   * @desc The setup function is called for the setup\r\n   * @arg server:ServerApi the ServerApi gives usefull functions for the plugins\r\n   *\r\n   */\r\n  setup() {\r\n    Contextmenu.instance = this;\r\n\r\n    this.api.addStylesheet(`${__dirname}/style/css/global.min.css`);\r\n    let api = new ContextMenuAPI(this.api);\r\n    this.api.registerAPI(\"contextmenu\", api);\r\n  }\r\n\r\n  /**\r\n   * @function start\r\n   * @package Contextmenu\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.1\r\n   * @version 0.0.1\r\n   *\r\n   * @desc the start function starts the plugins. Here you can manipulate elements etc...\r\n   * @arg server:ServerApi the ServerApi gives usefull functions for the plugins\r\n   *\r\n   */\r\n  start() {}\r\n\r\n  /**\r\n   * @function stop\r\n   * @package Contextmenu\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.1\r\n   * @version 0.0.1\r\n   *\r\n   * @desc the stop function is called for program stop. this does not work always for now\r\n   * @arg server:ServerApi the ServerApi gives usefull functions for the plugins\r\n   *\r\n   */\r\n  stop() {}\r\n\r\n  /**\r\n   * @function reload\r\n   * @package Contextmenu\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.1\r\n   * @version 0.0.1\r\n   *\r\n   * @desc the reload function is called on program stop. this does not work always for now\r\n   * @arg server:ServerApi the ServerApi gives usefull functions for the plugins\r\n   *\r\n   */\r\n  reload() {}\r\n}\r\n\r\n/**\r\n * @class ContextMenuAPI\r\n * @package Contextmenu\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.1\r\n * @version 0.0.1\r\n *\r\n * @desc the api for other plugins\r\n *\r\n */\r\nclass ContextMenuAPI implements Api {\r\n\r\n  name: string = \"contextmenu\";\r\n  version:string = \"0.0.1\";\r\n  id: string = \"contextmenu\";\r\n  api: PluginApi;\r\n  standartmenu: ContextMenu = standartmenu;\r\n\r\n  /**\r\n   * @function constructor\r\n   * @package Contextmenu\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.1\r\n   * @version 0.0.1\r\n   *\r\n   * @desc constructor for ContextMenuAPI\r\n   * @arg server:ServerApi the ServerApi gives usefull functions for the plugins\r\n   *\r\n   */\r\n  constructor(api: PluginApi) {\r\n    this.api = api;\r\n    let THIS = this;\r\n    api.addElement(`<div id=\"${this.id}\" style=\"display:none\"></div>`);\r\n    $(document).click(function() {\r\n      THIS.hide();\r\n    });\r\n    $(document).mousedown(function(event) {\r\n      if (event.which != 1) THIS.hide();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @function show\r\n   * @package Contextmenu\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.1\r\n   * @version 0.0.1\r\n   *\r\n   * @desc Shows a contextmenu\r\n   * @arg menu:ContextMenu the menu to show\r\n   *\r\n   */\r\n  show(menu: ContextMenu) {\r\n    $(`#${this.id}`).empty();\r\n    $(`#${this.id}`).append(menu.render());\r\n    $(`#${this.id}`).show();\r\n    $(`#${this.id}`).css({ top: currentMousePos.y, left: currentMousePos.x });\r\n  }\r\n\r\n  /**\r\n   * @function hide\r\n   * @package Contextmenu\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.1\r\n   * @version 0.0.1\r\n   *\r\n   * @desc Hides the contextmenu\r\n   *\r\n   */\r\n  hide() {\r\n    $(`#${this.id}`).empty();\r\n    $(`#${this.id}`).hide();\r\n  }\r\n}\r\n\r\nglobal.ContextMenu = ContextMenu;\r\nglobal.ContextMenuAPI = ContextMenuAPI;\r\nglobal.ContextMenuPoint = ContextMenuPoint;\r\nglobal.ContextMenuPointBuildingOptions = ContextMenuPointBuildingOptions;\r\n"]}