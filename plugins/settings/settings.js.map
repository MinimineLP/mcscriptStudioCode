{"version":3,"sources":["settings.js","settings.ts"],"names":["__extends","d","b","extendStatics","setPrototypeOf","Object","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","SettingsAPI_1","require","Settings","_super","apply","arguments","setup","server","exports","instance","addElement","addStylesheet","__dirname","registerAPI","settingsapi","loadFrame","start","getAPI","addButton","show","stop","reload","Plugin"],"mappings":"AAAA,aACA,IAAIA,UAAyC,WAAzCA,IAAAA,EAAa,SAAQC,EAAAC,GAG8D,OAF/EC,EAAAA,OAAgBC,gBAChBD,CAAAA,UAAgBE,cAAOD,OAClB,SAAEE,EAAWJ,GAAbD,EAAAK,UAA6BC,IAA2BN,SAAEK,EAAFJ,GAAA,IAAA,IAAAM,KAAAN,EAAAA,EAAAO,eAAAD,KAAAP,EAAAO,GAAAN,EAAAM,MACzCP,EAAAC,IAAmB,OAAA,SAAIA,EAAEO,GAAiC,SAF9EC,IAAAC,KAAAC,YAAAX,EAEsBE,EAAAF,EAAAC,GACtBD,EAAAY,UAAOV,OAAAA,EAAPE,OAAAS,OAAAZ,IAAAQ,EAAAG,UAAAX,EAAAW,UAAA,IAAAH,IALqC,GAQrCP,QAAAA,YAAAA,ECPR,IAAAY,cAAAC,QAAA,iBAGAC,SAAA,SAAAC,GAAA,SAAAD,IDGI,OAAA,OAAAC,GAAAA,EAAAC,MAAAR,KAAAS,YAAAT,KCyBJ,OA5BsCX,UAAAiB,EAAAC,GAIpCD,EAAAJ,UAAAQ,MAAA,SAAMC,KACJC,QAAAC,SAAWb,MACNW,OAASA,GACPG,WAAW,mEAClBH,EAAOI,cAAiBC,UAAS,qBACjCL,EAAOM,YAAY,WAAWb,cAAAc,aAC9Bd,cAAAc,YAAYC,aAGdb,EAAAJ,UAAAkB,MAAA,SAAMT,GACqBA,EAAOU,OAAO,eACnCC,UAAU,gBAAiB,gBAAiB,mCAAoC,WAClFlB,cAAAc,YAAYK,SAEdvB,KAAKW,OAASA,GAGhBL,EAAAJ,UAAAsB,KAAA,SAAKb,GACHX,KAAKW,OAASA,GAGhBL,EAAAJ,UAAAuB,OAAA,SAAOd,GACLX,KAAKW,OAASA,GAElBL,EA5BA,CAAsCoB,QAsBlCd,QAAA,QAAAN","file":"settings.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar SettingsAPI_1 = require(\"./SettingsAPI\");\nvar Settings = /** @class */ (function (_super) {\n    __extends(Settings, _super);\n    function Settings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Settings.prototype.setup = function (server) {\n        exports.instance = this;\n        this.server = server;\n        server.addElement(\"<div id=\\\"settings\\\" style=\\\"display:none\\\"><h3>Settings</h3></div>\");\n        server.addStylesheet(__dirname + \"/css/settings.css\");\n        server.registerAPI(\"settings\", SettingsAPI_1.settingsapi);\n        SettingsAPI_1.settingsapi.loadFrame();\n    };\n    Settings.prototype.start = function (server) {\n        var api = server.getAPI(\"shortcutbar\");\n        api.addButton(\"open_settings\", \"open settings\", \"<i class=\\\"mdi mdi-settings\\\"></i>\", function () {\n            SettingsAPI_1.settingsapi.show();\n        });\n        this.server = server;\n    };\n    Settings.prototype.stop = function (server) {\n        this.server = server;\n    };\n    Settings.prototype.reload = function (server) {\n        this.server = server;\n    };\n    return Settings;\n}(Plugin));\nexports[\"default\"] = Settings;\n","import {ShortcutbarAPI} from '@mcscriptstudiocodeplugins/shortcutbar';\r\nimport * as PluginManager from '@mcscriptstudiocode/pluginmanager';\r\nimport {settingsapi} from './SettingsAPI';\r\n\r\nexport let instance:Settings;\r\nexport default class Settings extends Plugin {\r\n\r\n  server:PluginManager.ServerApi;\r\n\r\n  setup(server){\r\n    instance = this;\r\n    this.server = server;\r\n    server.addElement(`<div id=\"settings\" style=\"display:none\"><h3>Settings</h3></div>`);\r\n    server.addStylesheet(`${__dirname}/css/settings.css`);\r\n    server.registerAPI(\"settings\",settingsapi);\r\n    settingsapi.loadFrame()\r\n  }\r\n\r\n  start(server:PluginManager.ServerApi) {\r\n    let api:ShortcutbarAPI = server.getAPI(\"shortcutbar\");\r\n    api.addButton(\"open_settings\", \"open settings\", `<i class=\"mdi mdi-settings\"></i>`, function() {\r\n      settingsapi.show();\r\n    });\r\n    this.server = server\r\n  }\r\n\r\n  stop(server:PluginManager.ServerApi){\r\n    this.server = server;\r\n  }\r\n\r\n  reload(server:PluginManager.ServerApi) {\r\n    this.server = server;\r\n  }\r\n}\r\n"]}