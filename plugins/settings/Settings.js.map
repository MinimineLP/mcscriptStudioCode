{"version":3,"sources":["Settings.js","Settings.ts"],"names":["__extends","d","b","extendStatics","setPrototypeOf","Object","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","SettingsAPI_1","require","pluginmanager_1","Settings","_super","apply","arguments","setup","exports","instance","api","addElement","addStylesheet","__dirname","registerAPI","settingsapi","loadFrame","start","getAPI","addButton","show","stop","reload","Plugin","global","SettingsAPI"],"mappings":"AAAA,aACA,IAAIA,UAAyC,WAAzCA,IAAAA,EAAa,SAAQC,EAAAC,GAG8D,OAF/EC,EAAAA,OAAgBC,gBAChBD,CAAAA,UAAgBE,cAAOD,OAClB,SAAEE,EAAWJ,GAAbD,EAAAK,UAA6BC,IAA2BN,SAAEK,EAAFJ,GAAA,IAAA,IAAAM,KAAAN,EAAAA,EAAAO,eAAAD,KAAAP,EAAAO,GAAAN,EAAAM,MACzCP,EAAAC,IAAmB,OAAA,SAAIA,EAAEO,GAAiC,SAF9EC,IAAAC,KAAAC,YAAAX,EAEsBE,EAAAF,EAAAC,GACtBD,EAAAY,UAAOV,OAAAA,EAAPE,OAAAS,OAAAZ,IAAAQ,EAAAG,UAAAX,EAAAW,UAAA,IAAAH,IALqC,GAQrCP,QAAAA,YAAAA,ECRR,IAAAY,cAAAC,QAAA,yBACAC,gBAAAD,QAAA,qCAKAE,SAAA,SAAAC,GAAA,SAAAD,IDNA,OAAA,OAAAC,GAAAA,EAAAC,MAAAT,KAAAU,YAAAV,KCgCA,OA1BsCX,UAAAkB,EAAAC,GACpCD,EAAAL,UAAAS,MAAA,YACEC,QAAAC,SAAWb,MACNc,IAAIC,WACP,mEAEFf,KAAKc,IAAIE,cAAiBC,UAAS,6BACnCjB,KAAKc,IAAII,YAAY,WAAYd,cAAAe,aACjCf,cAAAe,YAAYC,aAGdb,EAAAL,UAAAmB,MAAA,WAC4BrB,KAAKc,IAAIQ,OAAO,eACtCC,UACF,gBACA,gBACA,mCACA,WACEnB,cAAAe,YAAYK,UAKlBjB,EAAAL,UAAAuB,KAAA,aAEAlB,EAAAL,UAAAwB,OAAA,aACFnB,EA1BA,CAAsCD,gBAAAqB,QAkB9BvB,QAAAA,QAAAA,SAURwB,OAAOT,YAAcf,cAAAe,YACrBS,OAAOC,YAAczB,cAAAyB","file":"Settings.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar SettingsAPI_1 = require(\"./scripts/SettingsAPI\");\nvar pluginmanager_1 = require(\"@mcscriptstudiocode/pluginmanager\");\nvar Settings = /** @class */ (function (_super) {\n    __extends(Settings, _super);\n    function Settings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Settings.prototype.setup = function () {\n        exports.instance = this;\n        this.api.addElement(\"<div id=\\\"settings\\\" style=\\\"display:none\\\"><h3>Settings</h3></div>\");\n        this.api.addStylesheet(__dirname + \"/style/css/global.min.css\");\n        this.api.registerAPI(\"settings\", SettingsAPI_1.settingsapi);\n        SettingsAPI_1.settingsapi.loadFrame();\n    };\n    Settings.prototype.start = function () {\n        var api = this.api.getAPI(\"shortcutbar\");\n        api.addButton(\"open_settings\", \"open settings\", \"<i class=\\\"mdi mdi-settings\\\"></i>\", function () {\n            SettingsAPI_1.settingsapi.show();\n        });\n    };\n    Settings.prototype.stop = function () { };\n    Settings.prototype.reload = function () { };\n    return Settings;\n}(pluginmanager_1.Plugin));\nexports[\"default\"] = Settings;\nglobal.settingsapi = SettingsAPI_1.settingsapi;\nglobal.SettingsAPI = SettingsAPI_1.SettingsAPI;\n","import { ShortcutbarAPI } from \"@mcscriptstudiocodeplugins/shortcutbar\";\r\nimport { settingsapi, SettingsAPI } from \"./scripts/SettingsAPI\";\r\nimport { Plugin } from \"@mcscriptstudiocode/pluginmanager\";\r\n\r\ndeclare let global: any;\r\n\r\nexport let instance: Settings;\r\nexport default class Settings extends Plugin {\r\n  setup() {\r\n    instance = this;\r\n    this.api.addElement(\r\n      `<div id=\"settings\" style=\"display:none\"><h3>Settings</h3></div>`\r\n    );\r\n    this.api.addStylesheet(`${__dirname}/style/css/global.min.css`);\r\n    this.api.registerAPI(\"settings\", settingsapi);\r\n    settingsapi.loadFrame();\r\n  }\r\n\r\n  start() {\r\n    let api: ShortcutbarAPI = this.api.getAPI(\"shortcutbar\");\r\n    api.addButton(\r\n      \"open_settings\",\r\n      \"open settings\",\r\n      `<i class=\"mdi mdi-settings\"></i>`,\r\n      function() {\r\n        settingsapi.show();\r\n      }\r\n    );\r\n  }\r\n\r\n  stop() {}\r\n\r\n  reload() {}\r\n}\r\n\r\nglobal.settingsapi = settingsapi;\r\nglobal.SettingsAPI = SettingsAPI;\r\n"]}