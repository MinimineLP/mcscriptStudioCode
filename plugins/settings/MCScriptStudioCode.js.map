{"version":3,"sources":["MCScriptStudioCode.js","MCScriptStudioCode.ts"],"names":["exports","__esModule","module","Plugin","ServerApi","PluginManager","Event","OnListener","guid"],"mappings":"AAAA,aACAA,QAAQC,YAAa,ECCrBC,OAAOF,QAAU,CAEfG,OAAOA,OAAQC,UAAUA,UAAWC,cAAcA,cAGlDC,MAAMA,MAGNC,WAAWA,WAGXC,KAAKA","file":"MCScriptStudioCode.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nmodule.exports = {\n    // Standart APIs\n    Plugin: Plugin, ServerApi: ServerApi, PluginManager: PluginManager,\n    // Events\n    Event: Event,\n    // Listeners\n    OnListener: OnListener,\n    // Functions\n    guid: guid\n};\n","declare class PluginManager {plugins:Plugin[];api:ServerApi;constructor();loadPlugins(plugindir:string):void;loadPlugin(plugindir:string,plugin:string):Plugin;setupPlugins():void;startPlugins():void;stopPlugins():void;reloadPlugins():void;getPluginDescription(plugindir:string,plugin:string):any;getPlugins(plugindir):string[];fireEvent(event:Event):Event;installPlugin(url:string, pluginfolder:string);}declare class ServerApi {listeners:Array<Listener>;apis:any;on(event:string, func:Function);registerListener(listener:Listener);fireEvent(event:Event):Event;addStylesheet(stylesheet:string);addScript(script:string);addElement(element:string|HTMLElement);registerAPI(key:string, api:any):void;getAPI(key:string):any;}declare abstract class Plugin {name:string;url:string;author:string|string[];author_url:string|string[];version:string;main:string;constructor(name:string, url:string, author:string|string[], author_url:string|string[], version:string, main:string);abstract setup(server:ServerApi);abstract start(server:ServerApi);abstract stop(server:ServerApi);abstract reload(server:ServerApi);}declare interface Event {getType():string;}declare interface CancelableEvent extends Event {canceled:boolean;cancel();}declare interface Listener {getType():string;run(event:Event):void;}declare class OnListener implements Listener {trigger:string;func:Function;constructor(trigger:string, func:Function);run(event:Event);getType():string;}declare function guid();\r\n\r\nmodule.exports = {\r\n  // Standart APIs\r\n  Plugin:Plugin, ServerApi:ServerApi, PluginManager:PluginManager,\r\n\r\n  // Events\r\n  Event:Event,\r\n\r\n  // Listeners\r\n  OnListener:OnListener,\r\n\r\n  // Functions\r\n  guid:guid,\r\n}\r\n\r\n// Export and return on require / import\r\nexport {\r\n  // Standart APIs\r\n  Plugin, ServerApi, PluginManager,\r\n\r\n  // Events\r\n  Event, CancelableEvent,\r\n\r\n  // Listeners\r\n  Listener, OnListener,\r\n\r\n  // Functions\r\n  guid,\r\n};\r\n"]}