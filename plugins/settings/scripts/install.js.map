{"version":3,"sources":["install.js","install.ts"],"names":["exports","__esModule","SiteAPI","require","SettingsAPI_1","pluginmanager_1","Path","api","PluginManager","instance","settingsapi","push","name","renderContent","main","document","createElement","ul","id","classList","add","loadSite","parseURL","res","JSON","parse","forEach","e","r","i","plugins","length","toLowerCase","li","infos","subinfos","author","url","version","install","installicon","innerText","appendChild","newestversion","onclick","manager","installPlugin","join","__dirname","parentElement","style","display","swal","title","text","icon","buttons","dangerMode","then","close","window","location","reload"],"mappings":"AAAA,aACAA,QAAQC,YAAa,ECDrB,IAAAC,QAAAC,QAAA,+BACAC,cAAAD,QAAA,iBACAE,gBAAAF,QAAA,qCACAG,KAAAH,QAAA,QACII,IAAiBF,gBAAAG,cAAcC,SAASF,IAC5CH,cAAAM,YAAYC,KAAK,CACfC,KAAM,UACNC,cAAe,WACb,IAAIC,EAAuBC,SAASC,cAAc,OAC9CC,EAAuBF,SAASC,cAAc,MAsFlD,OArFAF,EAAKI,GAAK,mBACVD,EAAGE,UAAUC,IAAI,mBAAoB,QAErClB,QAAQmB,SACNnB,QAAQoB,SACN,+FAEF,SAAAC,GAC2BC,KAAKC,MAAMF,GAC3BG,QAAQ,SAAAC,GACfzB,QAAQmB,SAASnB,QAAQoB,SAASK,GAAI,SAAAC,GACpCA,EAAIJ,KAAKC,MAAMG,GAEf,IAAK,IAAIC,EAAI,EAAGA,EAAItB,IAAIuB,QAAQC,OAAQF,IACtC,GAAItB,IAAIuB,QAAQD,GAAGjB,KAAKoB,eAAiBJ,EAAEhB,KAAKoB,cAC9C,OAGJ,IAAIC,EAAoBlB,SAASC,cAAc,MAC3CkB,EAAwBnB,SAASC,cAAc,OAC/CJ,EAA6BG,SAASC,cAAc,KACpDmB,EAA6BpB,SAASC,cAAc,MACpDoB,EAAwBrB,SAASC,cAAc,MAC/CqB,EAAqBtB,SAASC,cAAc,MAC5CsB,EAAyBvB,SAASC,cAAc,MAChDuB,EAA6BxB,SAASC,cAAc,UACpDwB,EAA2BzB,SAASC,cAAc,KAEtDJ,EAAK6B,UAAYb,EAAEhB,KACnBA,EAAKO,UAAUC,IAAI,QACnBc,EAAMQ,YAAY9B,GAElBwB,EAAOK,UAAYb,EAAEQ,OACrBA,EAAOjB,UAAUC,IAAI,UACrBe,EAASO,YAAYN,GAErBE,EAAQG,UAAYb,EAAEe,cACtBL,EAAQnB,UAAUC,IAAI,WACtBe,EAASO,YAAYJ,GAErBH,EAAShB,UAAUC,IAAI,YACvBc,EAAMQ,YAAYP,GAElBE,EAAII,UAAYb,EAAES,IAClBA,EAAIlB,UAAUC,IAAI,OAClBe,EAASO,YAAYL,GAErBG,EAAYrB,UAAUC,IAAI,MAAO,gBACjCmB,EAAQG,YAAYF,GAEpBD,EAAQpB,UAAUC,IAAI,iBACtBmB,EAAQK,QAAU,WAChBL,EAAQpB,UAAUC,IAAI,WACtBb,IAAIsC,QAAQC,cACVnB,EACArB,KAAKyC,KAAKC,UAAW,SACrB,WACET,EAAQU,cAAcC,MAAMC,QAAU,OAEtCC,KAAK,CACHC,MAAO,cAAczB,EAAEhB,KAAI,kBAC3B0C,KAAM,cACJ1B,EAAEhB,KAAI,+JAER2C,KAAM,UACNC,QAAS,EAAC,EAAM,gBAChBC,YAAY,IACXC,KAAK,SAAAC,GACFA,GAAOC,OAAOC,SAASC,cAMnC5B,EAAMf,UAAUC,IAAI,SAEpBa,EAAGS,YAAYR,GACfD,EAAGS,YAAYH,GACftB,EAAGyB,YAAYT,SAMvBnB,EAAK4B,YAAYzB,GACVH","file":"install.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar SiteAPI = require(\"@mcscriptstudiocode/siteapi\");\nvar SettingsAPI_1 = require(\"./SettingsAPI\");\nvar pluginmanager_1 = require(\"@mcscriptstudiocode/pluginmanager\");\nvar Path = require(\"path\");\nvar api = pluginmanager_1.PluginManager.instance.api;\nSettingsAPI_1.settingsapi.push({\n    name: \"install\",\n    renderContent: function () {\n        var main = document.createElement(\"div\");\n        var ul = document.createElement(\"ul\");\n        main.id = \"settings_install\";\n        ul.classList.add(\"settings_install\", \"menu\");\n        SiteAPI.loadSite(SiteAPI.parseURL(\"https://raw.githubusercontent.com/MinimineLP/mcscriptStudioCode/master/plugins/plugins.json\"), function (res) {\n            var packages = JSON.parse(res);\n            packages.forEach(function (e) {\n                SiteAPI.loadSite(SiteAPI.parseURL(e), function (r) {\n                    r = JSON.parse(r);\n                    for (var i = 0; i < api.plugins.length; i++) {\n                        if (api.plugins[i].name.toLowerCase() == r.name.toLowerCase())\n                            return;\n                    }\n                    var li = document.createElement(\"li\");\n                    var infos = document.createElement(\"div\");\n                    var name = document.createElement(\"p\");\n                    var subinfos = document.createElement(\"ul\");\n                    var author = document.createElement(\"li\");\n                    var url = document.createElement(\"li\");\n                    var version = document.createElement(\"li\");\n                    var install = document.createElement(\"button\");\n                    var installicon = document.createElement(\"i\");\n                    name.innerText = r.name;\n                    name.classList.add(\"name\");\n                    infos.appendChild(name);\n                    author.innerText = r.author;\n                    author.classList.add(\"author\");\n                    subinfos.appendChild(author);\n                    version.innerText = r.newestversion;\n                    version.classList.add(\"version\");\n                    subinfos.appendChild(version);\n                    subinfos.classList.add(\"subinfos\");\n                    infos.appendChild(subinfos);\n                    url.innerText = r.url;\n                    url.classList.add(\"url\");\n                    subinfos.appendChild(url);\n                    installicon.classList.add(\"mdi\", \"mdi-download\");\n                    install.appendChild(installicon);\n                    install.classList.add(\"installbutton\");\n                    install.onclick = function () {\n                        install.classList.add(\"clicked\");\n                        api.manager.installPlugin(e, Path.join(__dirname, \"../..\"), function () {\n                            install.parentElement.style.display = \"none\";\n                            //@ts-ignore\n                            swal({\n                                title: \"Installed \\\"\" + r.name + \"\\\" successfully!\",\n                                text: \"Installed \\\"\" + r.name + \"\\\" successfully! You need to restart the Editor if you want the Plugin to work. If you restart now, file changes will be lost, so save them now! Restart now?\",\n                                icon: \"success\",\n                                buttons: [true, \"Restart now!\"],\n                                dangerMode: true\n                            }).then(function (close) {\n                                if (close)\n                                    window.location.reload();\n                            });\n                        });\n                    };\n                    infos.classList.add(\"infos\");\n                    li.appendChild(infos);\n                    li.appendChild(install);\n                    ul.appendChild(li);\n                });\n            });\n        });\n        main.appendChild(ul);\n        return main;\n    }\n});\n","import * as SiteAPI from \"@mcscriptstudiocode/siteapi\";\nimport { settingsapi } from \"./SettingsAPI\";\nimport { PluginManager, PluginApi } from \"@mcscriptstudiocode/pluginmanager\";\nimport * as Path from \"path\";\nlet api: PluginApi = PluginManager.instance.api;\nsettingsapi.push({\n  name: \"install\",\n  renderContent: function(): string | HTMLElement {\n    let main: HTMLDivElement = document.createElement(\"div\");\n    let ul: HTMLUListElement = document.createElement(\"ul\");\n    main.id = \"settings_install\";\n    ul.classList.add(\"settings_install\", \"menu\");\n\n    SiteAPI.loadSite(\n      SiteAPI.parseURL(\n        \"https://raw.githubusercontent.com/MinimineLP/mcscriptStudioCode/master/plugins/plugins.json\"\n      ),\n      res => {\n        let packages: string[] = JSON.parse(res);\n        packages.forEach(e => {\n          SiteAPI.loadSite(SiteAPI.parseURL(e), r => {\n            r = JSON.parse(r);\n\n            for (let i = 0; i < api.plugins.length; i++) {\n              if (api.plugins[i].name.toLowerCase() == r.name.toLowerCase())\n                return;\n            }\n\n            let li: HTMLLIElement = document.createElement(\"li\");\n            let infos: HTMLDivElement = document.createElement(\"div\");\n            let name: HTMLParagraphElement = document.createElement(\"p\");\n            let subinfos: HTMLUListElement = document.createElement(\"ul\");\n            let author: HTMLLIElement = document.createElement(\"li\");\n            let url: HTMLLIElement = document.createElement(\"li\");\n            let version: HTMLLIElement = document.createElement(\"li\");\n            let install: HTMLButtonElement = document.createElement(\"button\");\n            let installicon: HTMLElement = document.createElement(\"i\");\n\n            name.innerText = r.name;\n            name.classList.add(\"name\");\n            infos.appendChild(name);\n\n            author.innerText = r.author;\n            author.classList.add(\"author\");\n            subinfos.appendChild(author);\n\n            version.innerText = r.newestversion;\n            version.classList.add(\"version\");\n            subinfos.appendChild(version);\n\n            subinfos.classList.add(\"subinfos\");\n            infos.appendChild(subinfos);\n\n            url.innerText = r.url;\n            url.classList.add(\"url\");\n            subinfos.appendChild(url);\n\n            installicon.classList.add(\"mdi\", \"mdi-download\");\n            install.appendChild(installicon);\n\n            install.classList.add(\"installbutton\");\n            install.onclick = () => {\n              install.classList.add(\"clicked\");\n              api.manager.installPlugin(\n                e,\n                Path.join(__dirname, \"../..\"),\n                () => {\n                  install.parentElement.style.display = \"none\";\n                  //@ts-ignore\n                  swal({\n                    title: `Installed \"${r.name}\" successfully!`,\n                    text: `Installed \"${\n                      r.name\n                    }\" successfully! You need to restart the Editor if you want the Plugin to work. If you restart now, file changes will be lost, so save them now! Restart now?`,\n                    icon: \"success\",\n                    buttons: [true, \"Restart now!\"],\n                    dangerMode: true\n                  }).then(close => {\n                    if (close) window.location.reload();\n                  });\n                }\n              );\n            };\n\n            infos.classList.add(\"infos\");\n\n            li.appendChild(infos);\n            li.appendChild(install);\n            ul.appendChild(li);\n          });\n        });\n      }\n    );\n\n    main.appendChild(ul);\n    return main;\n  }\n});\n"]}