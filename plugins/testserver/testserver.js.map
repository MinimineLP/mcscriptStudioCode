{"version":3,"sources":["testserver.js","testserver.ts"],"names":["__extends","d","b","extendStatics","setPrototypeOf","Object","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","config","SimpleRcon","require","Fs","Os","ChildProcess","Node_Console","Path","$","swal","DivConsole_1","config_1","pluginmanager_1","util_1","divconsole","DivConsole","tmp","__dirname","Testserver","_super","_this","apply","arguments","mcserver","setup","api","addElement","readFileSync","addStylesheet","existsSync","deleteFolderRecursive","start","Config","FileFormatters","Yaml","loadConfig","setupDrag","pipe","console","log","document","getElementById","mkdirSync","id","getAPI","activeserver","submit","event","preventDefault","command","val","execCommand","addButton","walkSync","working_dir","forEach","basename","toLowerCase","readdirSync","dirname","includes","copyFolderRecursiveSync","reload","jar","get","show","guid","writeFileSync","EOL","server","Server","hide","empty","stop","click","minimized","children","addClass","removeClass","animate","width","window","left","height","not","watch","args","_i","length","important","endsWith","hasActiveServer","Plugin","path","file","curPath","lstatSync","isDirectory","unlinkSync","rmdirSync","exports","password","process","on","rcon","connect","exec","res","close","spawn","Error","javaargs","join","replace","cwd","stdout","stderr","outStream","errorStream","stdin","queue","host","port","timeout","state","err","error","cmd","callback","ret","isFile","e","concat","copyFileSync","source","target","targetFile","useOldName","targetFolder","curSource","elmnt","header","pos1","pos2","pos3","pos4","onmousedown","dragMouseDown","clientX","clientY","onmouseup","closeDragElement","onmousemove","elementDrag","x","offsetLeft","y","offsetTop","style","top","dragElement","load","setStandart","save"],"mappings":"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","file":"testserver.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar SimpleRcon = require(\"simple-rcon\");\nvar Fs = require(\"fs\");\nvar Os = require(\"os\");\nvar ChildProcess = require(\"child_process\");\nvar Node_Console = require(\"console\");\nvar Path = require(\"path\");\nvar $ = require(\"jquery\");\nvar swal = require(\"sweetalert\");\nvar DivConsole_1 = require(\"./scripts/DivConsole\");\nvar config_1 = require(\"@mcscriptstudiocode/config\");\nvar pluginmanager_1 = require(\"@mcscriptstudiocode/pluginmanager\");\nvar util_1 = require(\"@mcscriptstudiocode/util\");\nvar divconsole = new DivConsole_1.DivConsole();\nvar tmp = __dirname + \"/temp\";\nvar config;\nvar Testserver = /** @class */ (function (_super) {\n    __extends(Testserver, _super);\n    function Testserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.mcserver = null;\n        return _this;\n    }\n    Testserver.prototype.setup = function () {\n        this.api.addElement(Fs.readFileSync(__dirname + \"/html/console.min.html\", \"utf8\"));\n        this.api.addStylesheet(__dirname + \"/style/css/testserver.min.css\");\n        if (Fs.existsSync(tmp))\n            deleteFolderRecursive(tmp);\n    };\n    Testserver.prototype.start = function () {\n        var _this = this;\n        config = new config_1.Config(__dirname + \"/config.yml\", config_1.FileFormatters.Yaml);\n        loadConfig();\n        setupDrag();\n        divconsole.pipe(console.log);\n        divconsole.pipe(document.getElementById(\"testservercontent\"));\n        if (!Fs.existsSync(tmp))\n            Fs.mkdirSync(tmp);\n        var api = this.api.getAPI(\"shortcutbar\");\n        var activeserver = false;\n        var mcserver = this.mcserver;\n        var id;\n        $(\"#testserverform\").submit(function (event) {\n            event.preventDefault();\n            var command = $(\"#testserverinput\").val();\n            $(\"#testserverinput\").val(\"\");\n            if (activeserver) {\n                divconsole.log(\"> \" + command);\n                mcserver.execCommand(command, function () { });\n            }\n            return false;\n        });\n        api.addButton(\"start_testserver\", \"testserver\", \"<i class=\\\"mdi mdi-server-plus\\\"></i>\", function () {\n            if (!activeserver) {\n                var jar = config.get(\"server.jar\");\n                if (!Fs.existsSync(jar)) {\n                    //@ts-ignore\n                    swal(\"Jar not found\", \"Please enter  valid jar into the Testserver config (point: server.jar)!\", \"error\");\n                    return;\n                }\n                divconsole.log(\"starting server...\");\n                $(\"#testserver\").show();\n                activeserver = true;\n                id = util_1.guid();\n                Fs.mkdirSync(tmp + \"/\" + id);\n                Fs.mkdirSync(tmp + \"/\" + id + \"/world\");\n                Fs.mkdirSync(tmp + \"/\" + id + \"/world/datapacks\");\n                Fs.writeFileSync(tmp + \"/\" + id + \"/eula.txt\", \"eula=true\", \"utf8\");\n                Fs.writeFileSync(tmp + \"/\" + id + \"/server.properties\", \"server-name=Testserver\" + Os.EOL + \"generator-settings=3;minecraft:bedrock,40*minecraft:stone,4*minecraft:dirt,minecraft:grass;1\" + Os.EOL + \"level-type=FLAT\" + Os.EOL + \"enable-command-block=true\" + Os.EOL + \"max-players=4\" + Os.EOL + \"server-port=25565\" + Os.EOL + \"debug=false\" + Os.EOL + \"enable-rcon=true\" + Os.EOL + \"rcon.port=25575\" + Os.EOL + \"rcon.password=\" + id + Os.EOL + \"motd=\\u00A74MCScriptStudioCode \\u00A73Testserver\\u00A7r\", \"utf8\");\n                walkSync(working_dir).forEach(function (p) {\n                    var filename = Path.basename(p);\n                    if (filename.toLowerCase() == \"pack.mcmeta\") {\n                        if (Fs.readdirSync(Path.dirname(p)).includes(\"data\"))\n                            copyFolderRecursiveSync(Path.dirname(p), tmp + \"/\" + id + \"/world/datapacks\");\n                    }\n                });\n                var server = new Server(jar, tmp + \"/\" + id + \"/\", id);\n                server.start();\n                _this.mcserver = server;\n                mcserver = server;\n            }\n            else {\n                deleteFolderRecursive(tmp + \"/\" + id + \"/world/datapacks\");\n                Fs.mkdirSync(tmp + \"/\" + id + \"/world/datapacks\");\n                walkSync(working_dir).forEach(function (p) {\n                    var filename = Path.basename(p);\n                    if (filename.toLowerCase() == \"pack.mcmeta\") {\n                        if (Fs.readdirSync(Path.dirname(p)).includes(\"data\"))\n                            copyFolderRecursiveSync(Path.dirname(p), tmp + \"/\" + id + \"/world/datapacks\");\n                    }\n                });\n                _this.mcserver.reload();\n            }\n        });\n        api.addButton(\"stop_testserver\", \"stop testserver\", \"<i class=\\\"mdi mdi-server-minus\\\"></i>\", function () {\n            $(\"#testserver\").hide();\n            $(\"#testservercontent\").empty();\n            $(\"#testserverinput\").val(\"\");\n            if (activeserver) {\n                mcserver.stop();\n                activeserver = false;\n            }\n        });\n        $(\"#testserverreload\").click(function () {\n            if (activeserver) {\n                deleteFolderRecursive(tmp + \"/\" + id + \"/world/datapacks\");\n                Fs.mkdirSync(tmp + \"/\" + id + \"/world/datapacks\");\n                walkSync(working_dir).forEach(function (p) {\n                    var filename = Path.basename(p);\n                    if (filename.toLowerCase() == \"pack.mcmeta\") {\n                        if (Fs.readdirSync(Path.dirname(p)).includes(\"data\"))\n                            copyFolderRecursiveSync(Path.dirname(p), tmp + \"/\" + id + \"/world/datapacks\");\n                    }\n                });\n                _this.mcserver.reload();\n            }\n        });\n        var minimized = false;\n        $(\"#testserverminimize\").click(function () {\n            if (!minimized) {\n                $(\"#testserver\").animate({\n                    height: \"19px\"\n                }, 300, function () {\n                    $(\"#testserver\").animate({\n                        width: \"19px\",\n                        left: \"+=\" + ($(window).width() - 300) + \"px\"\n                    }, 300, function () {\n                        $(\"#testservericons\")\n                            .children(\"i\")\n                            .not(\"#testserverminimize\")\n                            .hide();\n                        $(\"#testservername\").hide();\n                        $(\"#testserverminimize\").removeClass(\"mdi-window-minimize\");\n                        $(\"#testserverminimize\").addClass(\"mdi-server\");\n                        $(\"#testserverform\").hide();\n                        minimized = true;\n                    });\n                });\n            }\n            else {\n                $(\"#testservericons\")\n                    .children(\"i\")\n                    .show();\n                $(\"#testservername\").show();\n                $(\"#testserverminimize\").addClass(\"mdi-window-minimize\");\n                $(\"#testserverminimize\").removeClass(\"mdi-server\");\n                $(\"#testserverform\").show();\n                $(\"#testserver\").animate({\n                    width: $(window).width() - 300 + \"px\",\n                    left: \"-=\" + ($(window).width() - 300) + \"px\"\n                }, 300, function () {\n                    $(\"#testserver\").animate({\n                        height: \"420px\"\n                    }, 300, function () {\n                        minimized = false;\n                    });\n                });\n            }\n        });\n        $(\"#testserverstop\").click(function () {\n            $(\"#testserver\").hide();\n            $(\"#testservercontent\").empty();\n            $(\"#testserverinput\").val(\"\");\n            if (activeserver) {\n                mcserver.stop();\n                activeserver = false;\n            }\n        });\n        Fs.watch(working_dir, function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var important = false;\n            if (args[1].endsWith(\".mcfunction\") ||\n                args[1].endsWith(\".mcmeta\") ||\n                args[1].endsWith(\".json\"))\n                important = true;\n            if (args[0] == \"rename\")\n                important = true;\n            if (config.get(\"autoreload\") && activeserver && important) {\n                deleteFolderRecursive(tmp + \"/\" + id + \"/world/datapacks\");\n                Fs.mkdirSync(tmp + \"/\" + id + \"/world/datapacks\");\n                walkSync(working_dir).forEach(function (p) {\n                    var filename = Path.basename(p);\n                    if (filename.toLowerCase() == \"pack.mcmeta\") {\n                        if (Fs.readdirSync(Path.dirname(p)).includes(\"data\"))\n                            copyFolderRecursiveSync(Path.dirname(p), tmp + \"/\" + id + \"/world/datapacks\");\n                    }\n                });\n                mcserver.reload();\n            }\n        });\n        this.hasActiveServer = function () {\n            return activeserver;\n        };\n    };\n    Testserver.prototype.stop = function () {\n        if (this.hasActiveServer())\n            this.mcserver.stop();\n        if (Fs.existsSync(tmp))\n            deleteFolderRecursive(tmp);\n    };\n    Testserver.prototype.reload = function () {\n        if (this.mcserver != null)\n            this.mcserver.stop();\n        if (Fs.existsSync(tmp))\n            deleteFolderRecursive(tmp);\n        if (!Fs.existsSync(tmp))\n            Fs.mkdirSync(tmp);\n    };\n    return Testserver;\n}(pluginmanager_1.Plugin));\nexports[\"default\"] = Testserver;\nfunction deleteFolderRecursive(path) {\n    if (Fs.existsSync(path)) {\n        Fs.readdirSync(path).forEach(function (file) {\n            var curPath = path + \"/\" + file;\n            if (Fs.lstatSync(curPath).isDirectory()) {\n                // recurse\n                deleteFolderRecursive(curPath);\n            }\n            else {\n                // delete file\n                Fs.unlinkSync(curPath);\n            }\n        });\n        Fs.rmdirSync(path);\n    }\n}\nvar Server = /** @class */ (function () {\n    function Server(jar, working_dir, password) {\n        var _this = this;\n        this.working_dir = working_dir;\n        this.jar = jar;\n        this.password = password;\n        process.on(\"exit\", function () { return _this.stop(); });\n    }\n    Server.prototype.stop = function () {\n        Node_Console.log(\"stopping...\");\n        var rcon = this.rcon;\n        rcon.connect();\n        rcon.exec(\"stop\", function (res) {\n            Node_Console.log(res);\n            rcon.close();\n        });\n    };\n    Server.prototype.start = function () {\n        var _this = this;\n        if (this.spawn)\n            throw new Error(\"Server already started\");\n        var javaargs = [\n            \"-jar\",\n            \"-Xms\" + config.get(\"server.minram\"),\n            \"-Xmx\" + config.get(\"server.maxram\")\n        ];\n        var args = [\"nogui\"];\n        this.spawn = ChildProcess.exec(config.get(\"javacommand\") +\n            \" \" +\n            javaargs.join(\" \") +\n            \" \" +\n            this.jar.replace(/\\\\/g, \"/\") +\n            \" \" +\n            args.join(\" \"), { cwd: this.working_dir });\n        this.spawn.stdout.pipe(process.stdout);\n        this.spawn.stderr.pipe(process.stderr);\n        this.spawn.stdout.pipe(divconsole.outStream);\n        this.spawn.stderr.pipe(divconsole.errorStream);\n        process.stdin.pipe(this.spawn.stdin);\n        this.queue = [];\n        this.rcon = new SimpleRcon({\n            host: \"localhost\",\n            port: 25575,\n            password: this.password,\n            timeout: 0\n        });\n        this.rcon.on(\"authenticated\", function () {\n            Node_Console.log(\"rcon authenticated\");\n            _this.state = \"connected\";\n        });\n        this.rcon.on(\"disconnected\", function () {\n            Node_Console.log(\"rcon disconnected\");\n            _this.state = \"disconnected\";\n        });\n        this.rcon.on(\"error\", function (err) {\n            Node_Console.error(err);\n        });\n    };\n    Server.prototype.reload = function () {\n        var rcon = this.rcon;\n        rcon.connect();\n        rcon.exec(\"reload\", function (res) {\n            Node_Console.log(res);\n        });\n    };\n    Server.prototype.execCommand = function (cmd, callback) {\n        if (callback === void 0) { callback = function (res) {\n            Node_Console.log(res);\n        }; }\n        var rcon = this.rcon;\n        rcon.connect();\n        rcon.exec(cmd, function (res) {\n            Node_Console.log(res);\n        });\n    };\n    return Server;\n}());\nfunction walkSync(path) {\n    path = path.replace(/\\\\/g, \"/\");\n    var ret = [];\n    if (Fs.lstatSync(path).isFile())\n        return [path];\n    Fs.readdirSync(path).forEach(function (e) {\n        ret = ret.concat(walkSync(path + \"/\" + e));\n    });\n    return ret;\n}\nfunction copyFileSync(source, target) {\n    var targetFile = target;\n    if (Fs.existsSync(target)) {\n        if (Fs.lstatSync(target).isDirectory()) {\n            targetFile = Path.join(target, Path.basename(source));\n        }\n    }\n    Fs.writeFileSync(targetFile, Fs.readFileSync(source));\n}\nfunction copyFolderRecursiveSync(source, target, useOldName) {\n    if (useOldName === void 0) { useOldName = true; }\n    var files = [];\n    var targetFolder = target;\n    if (useOldName)\n        targetFolder = Path.join(target, Path.basename(source));\n    if (!Fs.existsSync(targetFolder)) {\n        Fs.mkdirSync(targetFolder);\n    }\n    if (Fs.lstatSync(source).isDirectory()) {\n        files = Fs.readdirSync(source);\n        files.forEach(function (file) {\n            var curSource = Path.join(source, file);\n            if (Fs.lstatSync(curSource).isDirectory()) {\n                copyFolderRecursiveSync(curSource, targetFolder);\n            }\n            else {\n                copyFileSync(curSource, targetFolder);\n            }\n        });\n    }\n}\nfunction setupDrag() {\n    dragElement(document.getElementById(\"testserver\"));\n    function dragElement(elmnt) {\n        var pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n        var header;\n        if (document.getElementById(elmnt.id + \"header\")) {\n            header = document.getElementById(elmnt.id + \"header\");\n            header.onmousedown = dragMouseDown;\n        }\n        else {\n            // otherwise, move the DIV from anywhere inside the DIV:\n            header = elmnt;\n            elmnt.onmousedown = dragMouseDown;\n        }\n        function dragMouseDown(e) {\n            e = e || window.event;\n            e.preventDefault();\n            // get the mouse cursor position at startup:\n            pos3 = e.clientX;\n            pos4 = e.clientY;\n            document.onmouseup = closeDragElement;\n            // call a function whenever the cursor moves:\n            document.onmousemove = elementDrag;\n        }\n        function elementDrag(e) {\n            e = e || window.event;\n            e.preventDefault();\n            // calculate the new cursor position:\n            pos1 = pos3 - e.clientX;\n            pos2 = pos4 - e.clientY;\n            pos3 = e.clientX;\n            pos4 = e.clientY;\n            // set the element's new position:\n            var x = elmnt.offsetLeft - pos1;\n            var y = elmnt.offsetTop - pos2;\n            if (x < 1)\n                x = 1;\n            if (y < 1)\n                y = 1;\n            if (x + $(elmnt).width() > $(window).width())\n                x = $(window).width() - $(elmnt).width();\n            if (y + $(header).height() * 2 > $(window).height())\n                y = $(window).height() - $(header).height() * 2;\n            elmnt.style.left = x + \"px\";\n            elmnt.style.top = y + \"px\";\n        }\n        function closeDragElement() {\n            // stop moving when mouse button is released:\n            document.onmouseup = null;\n            document.onmousemove = null;\n        }\n    }\n}\nfunction loadConfig() {\n    config.load();\n    config.setStandart(\"autoreload\", true);\n    config.setStandart(\"javacommand\", \"java\");\n    config.setStandart(\"server.jar\", \"server.jar\");\n    config.setStandart(\"server.maxram\", \"2048M\");\n    config.setStandart(\"server.minram\", \"512M\");\n    config.save();\n}\n","declare let working_dir: string;\r\n\r\nimport * as SimpleRcon from \"simple-rcon\";\r\nimport * as Fs from \"fs\";\r\nimport * as Os from \"os\";\r\nimport * as ChildProcess from \"child_process\";\r\nimport * as Node_Console from \"console\";\r\nimport * as Path from \"path\";\r\nimport * as $ from \"jquery\";\r\nimport * as swal from \"sweetalert\";\r\nimport { DivConsole } from \"./scripts/DivConsole\";\r\nimport { Config, FileFormatters } from \"@mcscriptstudiocode/config\";\r\nimport { Plugin } from \"@mcscriptstudiocode/pluginmanager\";\r\nimport {ShortcutbarAPI} from \"@mcscriptstudiocodeplugins/shortcutbar\";\r\nimport { guid } from \"@mcscriptstudiocode/util\";\r\n\r\nlet divconsole = new DivConsole();\r\nconst tmp = __dirname + \"/temp\";\r\nlet config: Config;\r\n\r\nexport default class Testserver extends Plugin {\r\n  mcserver: Server = null;\r\n  hasActiveServer: Function;\r\n\r\n  setup() {\r\n    this.api.addElement(Fs.readFileSync(`${__dirname}/html/console.min.html`, \"utf8\"));\r\n    this.api.addStylesheet(`${__dirname}/style/css/testserver.min.css`);\r\n    if (Fs.existsSync(tmp)) deleteFolderRecursive(tmp);\r\n  }\r\n\r\n  start() {\r\n    config = new Config(`${__dirname}/config.yml`, FileFormatters.Yaml);\r\n    loadConfig();\r\n    setupDrag();\r\n\r\n    divconsole.pipe(console.log);\r\n    divconsole.pipe(document.getElementById(\"testservercontent\"));\r\n\r\n    if (!Fs.existsSync(tmp)) Fs.mkdirSync(tmp);\r\n\r\n    let api: ShortcutbarAPI = <ShortcutbarAPI>this.api.getAPI(\"shortcutbar\");\r\n    let activeserver = false;\r\n    let mcserver = this.mcserver;\r\n    let id: string;\r\n\r\n    $(\"#testserverform\").submit(event => {\r\n      event.preventDefault();\r\n      let command: string = <string>$(\"#testserverinput\").val();\r\n      $(\"#testserverinput\").val(\"\");\r\n      if (activeserver) {\r\n        divconsole.log(`> ${command}`);\r\n        mcserver.execCommand(command, function() {});\r\n      }\r\n      return false;\r\n    });\r\n\r\n    api.addButton(\r\n      \"start_testserver\",\r\n      \"testserver\",\r\n      `<i class=\"mdi mdi-server-plus\"></i>`,\r\n      () => {\r\n        if (!activeserver) {\r\n          let jar = config.get(\"server.jar\");\r\n          if (!Fs.existsSync(jar)) {\r\n            //@ts-ignore\r\n            swal(\r\n              \"Jar not found\",\r\n              `Please enter  valid jar into the Testserver config (point: server.jar)!`,\r\n              \"error\"\r\n            );\r\n            return;\r\n          }\r\n          divconsole.log(\"starting server...\");\r\n          $(\"#testserver\").show();\r\n          activeserver = true;\r\n          id = guid();\r\n          Fs.mkdirSync(`${tmp}/${id}`);\r\n          Fs.mkdirSync(`${tmp}/${id}/world`);\r\n          Fs.mkdirSync(`${tmp}/${id}/world/datapacks`);\r\n          Fs.writeFileSync(`${tmp}/${id}/eula.txt`, \"eula=true\", \"utf8\");\r\n          Fs.writeFileSync(\r\n            `${tmp}/${id}/server.properties`,\r\n            `server-name=Testserver${\r\n              Os.EOL\r\n            }generator-settings=3;minecraft\\:bedrock,40*minecraft\\:stone,4*minecraft\\:dirt,minecraft\\:grass;1${\r\n              Os.EOL\r\n            }level-type=FLAT${Os.EOL}enable-command-block=true${\r\n              Os.EOL\r\n            }max-players=4${Os.EOL}server-port=25565${Os.EOL}debug=false${\r\n              Os.EOL\r\n            }enable-rcon=true${Os.EOL}rcon.port=25575${\r\n              Os.EOL\r\n            }rcon.password=${id}${\r\n              Os.EOL\r\n            }motd=§4MCScriptStudioCode §3Testserver§r`,\r\n            \"utf8\"\r\n          );\r\n\r\n          walkSync(working_dir).forEach((p: string) => {\r\n            let filename: string = Path.basename(p);\r\n            if (filename.toLowerCase() == \"pack.mcmeta\") {\r\n              if (Fs.readdirSync(Path.dirname(p)).includes(\"data\"))\r\n                copyFolderRecursiveSync(\r\n                  Path.dirname(p),\r\n                  `${tmp}/${id}/world/datapacks`\r\n                );\r\n            }\r\n          });\r\n\r\n          let server: Server = new Server(jar, `${tmp}/${id}/`, id);\r\n          server.start();\r\n          this.mcserver = server;\r\n          mcserver = server;\r\n        } else {\r\n          deleteFolderRecursive(`${tmp}/${id}/world/datapacks`);\r\n          Fs.mkdirSync(`${tmp}/${id}/world/datapacks`);\r\n          walkSync(working_dir).forEach((p: string) => {\r\n            let filename: string = Path.basename(p);\r\n            if (filename.toLowerCase() == \"pack.mcmeta\") {\r\n              if (Fs.readdirSync(Path.dirname(p)).includes(\"data\"))\r\n                copyFolderRecursiveSync(\r\n                  Path.dirname(p),\r\n                  `${tmp}/${id}/world/datapacks`\r\n                );\r\n            }\r\n          });\r\n          this.mcserver.reload();\r\n        }\r\n      }\r\n    );\r\n\r\n    api.addButton(\r\n      \"stop_testserver\",\r\n      \"stop testserver\",\r\n      `<i class=\"mdi mdi-server-minus\"></i>`,\r\n      () => {\r\n        $(\"#testserver\").hide();\r\n        $(\"#testservercontent\").empty();\r\n        $(\"#testserverinput\").val(\"\");\r\n        if (activeserver) {\r\n          mcserver.stop();\r\n          activeserver = false;\r\n        }\r\n      }\r\n    );\r\n\r\n    $(\"#testserverreload\").click(() => {\r\n      if (activeserver) {\r\n        deleteFolderRecursive(`${tmp}/${id}/world/datapacks`);\r\n        Fs.mkdirSync(`${tmp}/${id}/world/datapacks`);\r\n        walkSync(working_dir).forEach((p: string) => {\r\n          let filename: string = Path.basename(p);\r\n          if (filename.toLowerCase() == \"pack.mcmeta\") {\r\n            if (Fs.readdirSync(Path.dirname(p)).includes(\"data\"))\r\n              copyFolderRecursiveSync(\r\n                Path.dirname(p),\r\n                `${tmp}/${id}/world/datapacks`\r\n              );\r\n          }\r\n        });\r\n        this.mcserver.reload();\r\n      }\r\n    });\r\n\r\n    let minimized = false;\r\n\r\n    $(\"#testserverminimize\").click(() => {\r\n      if (!minimized) {\r\n        $(\"#testserver\").animate(\r\n          {\r\n            height: \"19px\"\r\n          },\r\n          300,\r\n          () => {\r\n            $(\"#testserver\").animate(\r\n              {\r\n                width: \"19px\",\r\n                left: `+=${$(window).width() - 300}px`\r\n              },\r\n              300,\r\n              function() {\r\n                $(\"#testservericons\")\r\n                  .children(\"i\")\r\n                  .not(\"#testserverminimize\")\r\n                  .hide();\r\n                $(\"#testservername\").hide();\r\n                $(\"#testserverminimize\").removeClass(\"mdi-window-minimize\");\r\n                $(\"#testserverminimize\").addClass(\"mdi-server\");\r\n                $(\"#testserverform\").hide();\r\n                minimized = true;\r\n              }\r\n            );\r\n          }\r\n        );\r\n      } else {\r\n        $(\"#testservericons\")\r\n          .children(\"i\")\r\n          .show();\r\n        $(\"#testservername\").show();\r\n        $(\"#testserverminimize\").addClass(\"mdi-window-minimize\");\r\n        $(\"#testserverminimize\").removeClass(\"mdi-server\");\r\n        $(\"#testserverform\").show();\r\n        $(\"#testserver\").animate(\r\n          {\r\n            width: `${$(window).width() - 300}px`,\r\n            left: `-=${$(window).width() - 300}px`\r\n          },\r\n          300,\r\n          () => {\r\n            $(\"#testserver\").animate(\r\n              {\r\n                height: \"420px\"\r\n              },\r\n              300,\r\n              function() {\r\n                minimized = false;\r\n              }\r\n            );\r\n          }\r\n        );\r\n      }\r\n    });\r\n\r\n    $(\"#testserverstop\").click(() => {\r\n      $(\"#testserver\").hide();\r\n      $(\"#testservercontent\").empty();\r\n      $(\"#testserverinput\").val(\"\");\r\n      if (activeserver) {\r\n        mcserver.stop();\r\n        activeserver = false;\r\n      }\r\n    });\r\n\r\n    Fs.watch(working_dir, (...args: string[]) => {\r\n      let important: boolean = false;\r\n      if (\r\n        args[1].endsWith(\".mcfunction\") ||\r\n        args[1].endsWith(\".mcmeta\") ||\r\n        args[1].endsWith(\".json\")\r\n      )\r\n        important = true;\r\n      if (args[0] == \"rename\") important = true;\r\n      if (config.get(\"autoreload\") && activeserver && important) {\r\n        deleteFolderRecursive(`${tmp}/${id}/world/datapacks`);\r\n        Fs.mkdirSync(`${tmp}/${id}/world/datapacks`);\r\n        walkSync(working_dir).forEach((p: string) => {\r\n          let filename: string = Path.basename(p);\r\n          if (filename.toLowerCase() == \"pack.mcmeta\") {\r\n            if (Fs.readdirSync(Path.dirname(p)).includes(\"data\"))\r\n              copyFolderRecursiveSync(\r\n                Path.dirname(p),\r\n                `${tmp}/${id}/world/datapacks`\r\n              );\r\n          }\r\n        });\r\n\r\n        mcserver.reload();\r\n      }\r\n    });\r\n    this.hasActiveServer = function() {\r\n      return activeserver;\r\n    };\r\n  }\r\n\r\n  stop() {\r\n    if (this.hasActiveServer()) this.mcserver.stop();\r\n    if (Fs.existsSync(tmp)) deleteFolderRecursive(tmp);\r\n  }\r\n\r\n  reload() {\r\n    if (this.mcserver != null) this.mcserver.stop();\r\n    if (Fs.existsSync(tmp)) deleteFolderRecursive(tmp);\r\n    if (!Fs.existsSync(tmp)) Fs.mkdirSync(tmp);\r\n  }\r\n}\r\nfunction deleteFolderRecursive(path: Fs.PathLike) {\r\n  if (Fs.existsSync(path)) {\r\n    Fs.readdirSync(path).forEach(function(file) {\r\n      var curPath = path + \"/\" + file;\r\n      if (Fs.lstatSync(curPath).isDirectory()) {\r\n        // recurse\r\n        deleteFolderRecursive(curPath);\r\n      } else {\r\n        // delete file\r\n        Fs.unlinkSync(curPath);\r\n      }\r\n    });\r\n    Fs.rmdirSync(path);\r\n  }\r\n}\r\n\r\nclass Server {\r\n  spawn: ChildProcess.ChildProcess;\r\n  jar: string;\r\n  working_dir: string;\r\n  queue: any[];\r\n  rcon: any;\r\n  state: string;\r\n  password: string;\r\n\r\n  constructor(jar: string, working_dir: string, password: string) {\r\n    this.working_dir = working_dir;\r\n    this.jar = jar;\r\n    this.password = password;\r\n    process.on(\"exit\", () => this.stop());\r\n  }\r\n  stop() {\r\n    Node_Console.log(\"stopping...\");\r\n    let rcon = this.rcon;\r\n    rcon.connect();\r\n    rcon.exec(\"stop\", function(res: any) {\r\n      Node_Console.log(res);\r\n      rcon.close();\r\n    });\r\n  }\r\n  start() {\r\n    if (this.spawn) throw new Error(\"Server already started\");\r\n\r\n    let javaargs = [\r\n      \"-jar\",\r\n      \"-Xms\" + config.get(\"server.minram\"),\r\n      \"-Xmx\" + config.get(\"server.maxram\")\r\n    ];\r\n    let args = [\"nogui\"];\r\n    this.spawn = ChildProcess.exec(\r\n      config.get(\"javacommand\") +\r\n        \" \" +\r\n        javaargs.join(\" \") +\r\n        \" \" +\r\n        this.jar.replace(/\\\\/g, \"/\") +\r\n        \" \" +\r\n        args.join(\" \"),\r\n      { cwd: this.working_dir }\r\n    );\r\n    this.spawn.stdout.pipe(process.stdout);\r\n    this.spawn.stderr.pipe(process.stderr);\r\n\r\n    this.spawn.stdout.pipe(divconsole.outStream);\r\n    this.spawn.stderr.pipe(divconsole.errorStream);\r\n    process.stdin.pipe(this.spawn.stdin);\r\n\r\n    this.queue = [];\r\n\r\n    this.rcon = new SimpleRcon({\r\n      host: \"localhost\",\r\n      port: 25575,\r\n      password: this.password,\r\n      timeout: 0\r\n    });\r\n    this.rcon.on(\"authenticated\", () => {\r\n      Node_Console.log(\"rcon authenticated\");\r\n      this.state = \"connected\";\r\n    });\r\n    this.rcon.on(\"disconnected\", () => {\r\n      Node_Console.log(\"rcon disconnected\");\r\n      this.state = \"disconnected\";\r\n    });\r\n    this.rcon.on(\"error\", err => {\r\n      Node_Console.error(err);\r\n    });\r\n  }\r\n  reload() {\r\n    let rcon = this.rcon;\r\n    rcon.connect();\r\n    rcon.exec(\"reload\", function(res: any) {\r\n      Node_Console.log(res);\r\n    });\r\n  }\r\n  execCommand(\r\n    cmd: string,\r\n    callback: Function = function(res: any) {\r\n      Node_Console.log(res);\r\n    }\r\n  ) {\r\n    let rcon = this.rcon;\r\n    rcon.connect();\r\n    rcon.exec(cmd, function(res: any) {\r\n      Node_Console.log(res);\r\n    });\r\n  }\r\n}\r\n\r\nfunction walkSync(path: string): string[] {\r\n  path = path.replace(/\\\\/g, \"/\");\r\n  let ret: string[] = [];\r\n  if (Fs.lstatSync(path).isFile()) return [path];\r\n  Fs.readdirSync(path).forEach(e => {\r\n    ret = ret.concat(walkSync(path + \"/\" + e));\r\n  });\r\n  return ret;\r\n}\r\n\r\nfunction copyFileSync(source, target) {\r\n  var targetFile = target;\r\n  if (Fs.existsSync(target)) {\r\n    if (Fs.lstatSync(target).isDirectory()) {\r\n      targetFile = Path.join(target, Path.basename(source));\r\n    }\r\n  }\r\n  Fs.writeFileSync(targetFile, Fs.readFileSync(source));\r\n}\r\n\r\nfunction copyFolderRecursiveSync(\r\n  source: string,\r\n  target: string,\r\n  useOldName: boolean = true\r\n) {\r\n  var files = [];\r\n  var targetFolder = target;\r\n  if (useOldName) targetFolder = Path.join(target, Path.basename(source));\r\n  if (!Fs.existsSync(targetFolder)) {\r\n    Fs.mkdirSync(targetFolder);\r\n  }\r\n  if (Fs.lstatSync(source).isDirectory()) {\r\n    files = Fs.readdirSync(source);\r\n    files.forEach(function(file) {\r\n      var curSource = Path.join(source, file);\r\n      if (Fs.lstatSync(curSource).isDirectory()) {\r\n        copyFolderRecursiveSync(curSource, targetFolder);\r\n      } else {\r\n        copyFileSync(curSource, targetFolder);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction setupDrag() {\r\n  dragElement(document.getElementById(\"testserver\"));\r\n\r\n  function dragElement(elmnt) {\r\n    var pos1 = 0,\r\n      pos2 = 0,\r\n      pos3 = 0,\r\n      pos4 = 0;\r\n    let header;\r\n    if (document.getElementById(elmnt.id + \"header\")) {\r\n      header = document.getElementById(elmnt.id + \"header\");\r\n      header.onmousedown = dragMouseDown;\r\n    } else {\r\n      // otherwise, move the DIV from anywhere inside the DIV:\r\n      header = elmnt;\r\n      elmnt.onmousedown = dragMouseDown;\r\n    }\r\n\r\n    function dragMouseDown(e) {\r\n      e = e || window.event;\r\n      e.preventDefault();\r\n      // get the mouse cursor position at startup:\r\n      pos3 = e.clientX;\r\n      pos4 = e.clientY;\r\n      document.onmouseup = closeDragElement;\r\n      // call a function whenever the cursor moves:\r\n      document.onmousemove = elementDrag;\r\n    }\r\n\r\n    function elementDrag(e) {\r\n      e = e || window.event;\r\n      e.preventDefault();\r\n      // calculate the new cursor position:\r\n      pos1 = pos3 - e.clientX;\r\n      pos2 = pos4 - e.clientY;\r\n      pos3 = e.clientX;\r\n      pos4 = e.clientY;\r\n      // set the element's new position:\r\n      let x = elmnt.offsetLeft - pos1;\r\n      let y = elmnt.offsetTop - pos2;\r\n      if (x < 1) x = 1;\r\n      if (y < 1) y = 1;\r\n      if (x + $(elmnt).width() > $(window).width())\r\n        x = $(window).width() - $(elmnt).width();\r\n      if (y + $(header).height() * 2 > $(window).height())\r\n        y = $(window).height() - $(header).height() * 2;\r\n      elmnt.style.left = x + \"px\";\r\n      elmnt.style.top = y + \"px\";\r\n    }\r\n\r\n    function closeDragElement() {\r\n      // stop moving when mouse button is released:\r\n      document.onmouseup = null;\r\n      document.onmousemove = null;\r\n    }\r\n  }\r\n}\r\n\r\nfunction loadConfig() {\r\n  config.load();\r\n  config.setStandart(\"autoreload\", true);\r\n  config.setStandart(\"javacommand\", \"java\");\r\n  config.setStandart(\"server.jar\", \"server.jar\");\r\n  config.setStandart(\"server.maxram\", \"2048M\");\r\n  config.setStandart(\"server.minram\", \"512M\");\r\n  config.save();\r\n}\r\n"]}