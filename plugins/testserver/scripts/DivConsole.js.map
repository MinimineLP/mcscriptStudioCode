{"version":3,"sources":["DivConsole.js","DivConsole.ts"],"names":["__extends","d","b","extendStatics","setPrototypeOf","Object","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","Stream","require","Util","DivConsole","outStream","DivConsoleOutStream","debugStream","DivConsoleDebugStream","errorStream","DivConsoleErrorStream","exceptionStream","DivConsoleExceptionStream","contentList","ConsoleContentList","log","args","_i","arguments","length","push","ConsoleLogContent","error","ConsoleErrorContent","debug","ConsoleDebugContent","exception","ConsoleExceptionContent","pipe","clear","exports","ConsoleContent","type","content","getString","toString","getHTML","getPrefix","toUpperCase","_super","call","renderformat","size","pipes","splice","pipeToPipes","parseRenderMessageHTML","format","replace","parseRenderMessageString","renderHTML","max","ret","i","renderString","HTMLElement","innerHTML","newelement","_this","forEach","scrollTop","scrollHeight","Function","Writable","_write","err","console","inherits","chunk","_encoding","done"],"mappings":"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","file":"DivConsole.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexports.__esModule = true;\nvar Stream = require(\"stream\");\nvar Util = require(\"util\");\nvar DivConsole = /** @class */ (function () {\n    function DivConsole() {\n        this.outStream = new DivConsoleOutStream(this);\n        this.debugStream = new DivConsoleDebugStream(this);\n        this.errorStream = new DivConsoleErrorStream(this);\n        this.exceptionStream = new DivConsoleExceptionStream(this);\n        this.contentList = new ConsoleContentList();\n    }\n    DivConsole.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.contentList.push(new ConsoleLogContent(args));\n    };\n    DivConsole.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.contentList.push(new ConsoleErrorContent(args));\n    };\n    DivConsole.prototype.debug = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.contentList.push(new ConsoleDebugContent(args));\n    };\n    DivConsole.prototype.exception = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.contentList.push(new ConsoleExceptionContent(args));\n    };\n    DivConsole.prototype.pipe = function (pipe) {\n        this.contentList.pipe(pipe);\n    };\n    DivConsole.prototype.clear = function () {\n        this.contentList.clear();\n    };\n    return DivConsole;\n}());\nexports.DivConsole = DivConsole;\nvar ConsoleContent = /** @class */ (function () {\n    function ConsoleContent(type) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        this.type = type;\n        this.content = args;\n    }\n    ConsoleContent.prototype.getString = function () {\n        return this.content.toString();\n    };\n    ConsoleContent.prototype.getHTML = function () {\n        return this.content.toString();\n    };\n    ConsoleContent.prototype.getPrefix = function () {\n        return \"Console/\" + this.type.toUpperCase();\n    };\n    return ConsoleContent;\n}());\nexports.ConsoleContent = ConsoleContent;\nvar ConsoleLogContent = /** @class */ (function (_super) {\n    __extends(ConsoleLogContent, _super);\n    function ConsoleLogContent() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _super.call(this, \"log\", args) || this;\n    }\n    ConsoleLogContent.prototype.getPrefix = function () {\n        return \"Console/LOGGING\";\n    };\n    return ConsoleLogContent;\n}(ConsoleContent));\nexports.ConsoleLogContent = ConsoleLogContent;\nvar ConsoleErrorContent = /** @class */ (function (_super) {\n    __extends(ConsoleErrorContent, _super);\n    function ConsoleErrorContent() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _super.call(this, \"error\", args) || this;\n    }\n    ConsoleErrorContent.prototype.getPrefix = function () {\n        return \"Console/ERROR\";\n    };\n    return ConsoleErrorContent;\n}(ConsoleContent));\nexports.ConsoleErrorContent = ConsoleErrorContent;\nvar ConsoleExceptionContent = /** @class */ (function (_super) {\n    __extends(ConsoleExceptionContent, _super);\n    function ConsoleExceptionContent() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _super.call(this, \"exception\", args) || this;\n    }\n    ConsoleExceptionContent.prototype.getPrefix = function () {\n        return \"Console/EXCEPTION\";\n    };\n    return ConsoleExceptionContent;\n}(ConsoleContent));\nexports.ConsoleExceptionContent = ConsoleExceptionContent;\nvar ConsoleDebugContent = /** @class */ (function (_super) {\n    __extends(ConsoleDebugContent, _super);\n    function ConsoleDebugContent() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _super.call(this, \"debug\", args) || this;\n    }\n    ConsoleDebugContent.prototype.getPrefix = function () {\n        return \"Console/DEBUGGING\";\n    };\n    return ConsoleDebugContent;\n}(ConsoleContent));\nexports.ConsoleDebugContent = ConsoleDebugContent;\nvar ConsoleContentList = /** @class */ (function () {\n    function ConsoleContentList(renderformat) {\n        if (renderformat === void 0) { renderformat = \"%msg%\"; }\n        this.content = [];\n        this.size = 1000;\n        this.pipes = [];\n        this.renderformat = renderformat;\n    }\n    ConsoleContentList.prototype.push = function (content) {\n        if (this.size < this.content.length)\n            this.content.splice(0, this.content.length - this.size, content);\n        else\n            this.content.splice(0, 0, content);\n        this.pipeToPipes(content);\n    };\n    ConsoleContentList.prototype.parseRenderMessageHTML = function (format, content) {\n        return format\n            .replace(/%msg%/g, content.getHTML())\n            .replace(/%pre%/g, content.getPrefix());\n    };\n    ConsoleContentList.prototype.parseRenderMessageString = function (format, content) {\n        return format\n            .replace(/%msg%/g, content.getString())\n            .replace(/%pre%/g, content.getPrefix());\n    };\n    ConsoleContentList.prototype.renderHTML = function (max, renderformat) {\n        if (max === void 0) { max = this.size; }\n        if (renderformat === void 0) { renderformat = this.renderformat; }\n        if (max == 0)\n            max = this.size;\n        var ret = \"\";\n        if (max >= this.content.length)\n            max = this.content.length - 1;\n        for (var i = max; i >= 0; i--) {\n            ret += this.parseRenderMessageHTML(renderformat, this.content[i]) + \"\\n\";\n        }\n        return ret.replace(/\\n/g, \"\\n<br/>\");\n    };\n    ConsoleContentList.prototype.renderString = function (max, renderformat) {\n        if (max === void 0) { max = this.size; }\n        if (renderformat === void 0) { renderformat = this.renderformat; }\n        if (max == 0)\n            max = this.size;\n        var ret = \"\";\n        if (max >= this.content.length)\n            max = this.content.length - 1;\n        for (var i = max; i >= 0; i--) {\n            ret += this.parseRenderMessageString(renderformat, this.content[i]);\n        }\n        return ret;\n    };\n    ConsoleContentList.prototype.pipe = function (pipe) {\n        if (pipe instanceof HTMLElement)\n            pipe.innerHTML = this.renderHTML();\n        this.pipes.push(pipe);\n    };\n    ConsoleContentList.prototype.pipeToPipes = function (newelement) {\n        var _this = this;\n        this.pipes.forEach(function (pipe) {\n            if (pipe instanceof HTMLElement) {\n                pipe.innerHTML = _this.renderHTML();\n                pipe.scrollTop = pipe.scrollHeight;\n            }\n            else if (pipe instanceof Function)\n                pipe(newelement.getString());\n            else if (pipe instanceof Stream.Writable)\n                pipe._write(newelement.getString(), \"utf8\", function (err) {\n                    if (err)\n                        console.error(err);\n                });\n        });\n    };\n    ConsoleContentList.prototype.clear = function () {\n        this.content = [];\n    };\n    return ConsoleContentList;\n}());\nexports.ConsoleContentList = ConsoleContentList;\nfunction DivConsoleOutStream(console) {\n    Stream.Writable.call(this);\n    this.console = console;\n}\nexports.DivConsoleOutStream = DivConsoleOutStream;\nUtil.inherits(DivConsoleOutStream, Stream.Writable);\nDivConsoleOutStream.prototype._write = function (chunk, _encoding, done) {\n    this.console.log(chunk.toString());\n    done();\n};\nfunction DivConsoleErrorStream(console) {\n    Stream.Writable.call(this);\n    this.console = console;\n}\nexports.DivConsoleErrorStream = DivConsoleErrorStream;\nUtil.inherits(DivConsoleErrorStream, Stream.Writable);\nDivConsoleErrorStream.prototype._write = function (chunk, _encoding, done) {\n    this.console.error(chunk.toString());\n    done();\n};\nfunction DivConsoleExceptionStream(console) {\n    Stream.Writable.call(this);\n    this.console = console;\n}\nexports.DivConsoleExceptionStream = DivConsoleExceptionStream;\nUtil.inherits(DivConsoleErrorStream, Stream.Writable);\nDivConsoleErrorStream.prototype._write = function (chunk, _encoding, done) {\n    this.console.exception(chunk.toString());\n    done();\n};\nfunction DivConsoleDebugStream(console) {\n    Stream.Writable.call(this);\n    this.console = console;\n}\nexports.DivConsoleDebugStream = DivConsoleDebugStream;\nUtil.inherits(DivConsoleErrorStream, Stream.Writable);\nDivConsoleErrorStream.prototype._write = function (chunk, _encoding, done) {\n    this.console.debug(chunk.toString());\n    done();\n};\n","import * as Stream from \"stream\";\r\nimport * as Util from \"util\";\r\n\r\nexport class DivConsole {\r\n  outStream: Stream.Writable = new DivConsoleOutStream(this);\r\n  debugStream: Stream.Writable = new DivConsoleDebugStream(this);\r\n  errorStream: Stream.Writable = new DivConsoleErrorStream(this);\r\n  exceptionStream: Stream.Writable = new DivConsoleExceptionStream(this);\r\n  contentList: ConsoleContentList = new ConsoleContentList();\r\n  log(...args: any[]) {\r\n    this.contentList.push(new ConsoleLogContent(args));\r\n  }\r\n  error(...args: any[]) {\r\n    this.contentList.push(new ConsoleErrorContent(args));\r\n  }\r\n  debug(...args: any[]) {\r\n    this.contentList.push(new ConsoleDebugContent(args));\r\n  }\r\n  exception(...args: any[]) {\r\n    this.contentList.push(new ConsoleExceptionContent(args));\r\n  }\r\n  pipe(pipe: HTMLElement | Function | Stream.Writable) {\r\n    this.contentList.pipe(pipe);\r\n  }\r\n  clear() {\r\n    this.contentList.clear();\r\n  }\r\n}\r\n\r\nexport class ConsoleContent {\r\n  type: string;\r\n  content: any;\r\n  constructor(type: string, ...args: any[]) {\r\n    this.type = type;\r\n    this.content = args;\r\n  }\r\n  getString(): string {\r\n    return this.content.toString();\r\n  }\r\n  getHTML(): string {\r\n    return this.content.toString();\r\n  }\r\n  getPrefix(): string {\r\n    return `Console/${this.type.toUpperCase()}`;\r\n  }\r\n}\r\n\r\nexport class ConsoleLogContent extends ConsoleContent {\r\n  constructor(...args: any[]) {\r\n    super(\"log\", args);\r\n  }\r\n  getPrefix(): string {\r\n    return `Console/LOGGING`;\r\n  }\r\n}\r\n\r\nexport class ConsoleErrorContent extends ConsoleContent {\r\n  constructor(...args: any[]) {\r\n    super(\"error\", args);\r\n  }\r\n  getPrefix(): string {\r\n    return `Console/ERROR`;\r\n  }\r\n}\r\n\r\nexport class ConsoleExceptionContent extends ConsoleContent {\r\n  constructor(...args: any[]) {\r\n    super(\"exception\", args);\r\n  }\r\n  getPrefix(): string {\r\n    return `Console/EXCEPTION`;\r\n  }\r\n}\r\n\r\nexport class ConsoleDebugContent extends ConsoleContent {\r\n  constructor(...args: any[]) {\r\n    super(\"debug\", args);\r\n  }\r\n  getPrefix(): string {\r\n    return `Console/DEBUGGING`;\r\n  }\r\n}\r\n\r\nexport class ConsoleContentList {\r\n  content: ConsoleContent[] = [];\r\n  size: number = 1000;\r\n  renderformat: string;\r\n  pipes: (HTMLElement | Function | Stream.Writable)[] = [];\r\n\r\n  constructor(renderformat: string = \"%msg%\") {\r\n    this.renderformat = renderformat;\r\n  }\r\n\r\n  push(content: ConsoleContent): void {\r\n    if (this.size < this.content.length)\r\n      this.content.splice(0, this.content.length - this.size, content);\r\n    else this.content.splice(0, 0, content);\r\n    this.pipeToPipes(content);\r\n  }\r\n\r\n  parseRenderMessageHTML(format: string, content: ConsoleContent): string {\r\n    return format\r\n      .replace(/%msg%/g, content.getHTML())\r\n      .replace(/%pre%/g, content.getPrefix());\r\n  }\r\n\r\n  parseRenderMessageString(format: string, content: ConsoleContent): string {\r\n    return format\r\n      .replace(/%msg%/g, content.getString())\r\n      .replace(/%pre%/g, content.getPrefix());\r\n  }\r\n\r\n  renderHTML(\r\n    max: number = this.size,\r\n    renderformat = this.renderformat\r\n  ): string {\r\n    if (max == 0) max = this.size;\r\n    let ret: string = \"\";\r\n    if (max >= this.content.length) max = this.content.length - 1;\r\n    for (let i = max; i >= 0; i--) {\r\n      ret += this.parseRenderMessageHTML(renderformat, this.content[i]) + \"\\n\";\r\n    }\r\n    return ret.replace(/\\n/g, \"\\n<br/>\");\r\n  }\r\n\r\n  renderString(\r\n    max: number = this.size,\r\n    renderformat = this.renderformat\r\n  ): string {\r\n    if (max == 0) max = this.size;\r\n    let ret: string = \"\";\r\n    if (max >= this.content.length) max = this.content.length - 1;\r\n    for (let i = max; i >= 0; i--) {\r\n      ret += this.parseRenderMessageString(renderformat, this.content[i]);\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  pipe(pipe: HTMLElement | Function | Stream.Writable): void {\r\n    if (pipe instanceof HTMLElement) pipe.innerHTML = this.renderHTML();\r\n    this.pipes.push(pipe);\r\n  }\r\n\r\n  pipeToPipes(newelement: ConsoleContent): void {\r\n    this.pipes.forEach((pipe: HTMLElement | Function | Stream.Writable) => {\r\n      if (pipe instanceof HTMLElement) {\r\n        pipe.innerHTML = this.renderHTML();\r\n        pipe.scrollTop = pipe.scrollHeight;\r\n      } else if (pipe instanceof Function) pipe(newelement.getString());\r\n      else if (pipe instanceof Stream.Writable)\r\n        pipe._write(newelement.getString(), \"utf8\", err => {\r\n          if (err) console.error(err);\r\n        });\r\n    });\r\n  }\r\n  clear(): void {\r\n    this.content = [];\r\n  }\r\n}\r\n\r\nexport function DivConsoleOutStream(console: DivConsole) {\r\n  Stream.Writable.call(this);\r\n  this.console = console;\r\n}\r\nUtil.inherits(DivConsoleOutStream, Stream.Writable);\r\nDivConsoleOutStream.prototype._write = function(chunk, _encoding, done) {\r\n  this.console.log(chunk.toString());\r\n  done();\r\n};\r\n\r\nexport function DivConsoleErrorStream(console: DivConsole) {\r\n  Stream.Writable.call(this);\r\n  this.console = console;\r\n}\r\nUtil.inherits(DivConsoleErrorStream, Stream.Writable);\r\nDivConsoleErrorStream.prototype._write = function(chunk, _encoding, done) {\r\n  this.console.error(chunk.toString());\r\n  done();\r\n};\r\n\r\nexport function DivConsoleExceptionStream(console: DivConsole) {\r\n  Stream.Writable.call(this);\r\n  this.console = console;\r\n}\r\nUtil.inherits(DivConsoleErrorStream, Stream.Writable);\r\nDivConsoleErrorStream.prototype._write = function(chunk, _encoding, done) {\r\n  this.console.exception(chunk.toString());\r\n  done();\r\n};\r\n\r\nexport function DivConsoleDebugStream(console: DivConsole) {\r\n  Stream.Writable.call(this);\r\n  this.console = console;\r\n}\r\nUtil.inherits(DivConsoleErrorStream, Stream.Writable);\r\nDivConsoleErrorStream.prototype._write = function(chunk, _encoding, done) {\r\n  this.console.debug(chunk.toString());\r\n  done();\r\n};\r\n"]}