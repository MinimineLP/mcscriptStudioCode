{"version":3,"sources":["OnListener.js","OnListener.ts"],"names":["exports","__esModule","OnListener","trigger","func","prototype","run","event","getType"],"mappings":"AAAA;;AACAA,QAAQC,UAAR,GAAqB,IAArB;ACEA;;;;;;;;;;;;;AAaA,IAAAC,aAAA,aAAA,YAAA;AA2BE;;;;;;;;;;;;;AAaA,WAAAA,UAAA,CAAYC,OAAZ,EAA6BC,IAA7B,EAA2C;AACzC,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;AAED;;;;;;;;;;;;;;AAcAF,aAAAG,SAAA,CAAAC,GAAA,GAAA,UAAIC,KAAJ,EAAgB;AACd,SAAKH,IAAL,CAAUG,KAAV;AACD,GAFD;AAIA;;;;;;;;;;;;;AAaAL,aAAAG,SAAA,CAAAG,OAAA,GAAA,YAAA;AACE,WAAO,KAAKL,OAAZ;AACD,GAFD;AAGF,SAAAD,UAAA;AA/EA,CAAA,EAAA;AAkFSF,QAAAE,UAAA,GAAAA,UAAA;AADTF,QAAA,SAAA,IAAeE,UAAf","file":"OnListener.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\n/**\n * @class OnListener\n * @implements Listener\n * @author Minimine <https://github.com/miniminelp>\n * @since 0.0.2\n * @version 0.0.2\n * @license MIT\n * @copyright (c) Minimine 2018\n *\n * @description Listening for a event by name (deprecated)\n * @deprecated on-Listeners are deprecated, make Listeners from the Listener interface\n *\n */\nvar OnListener = /** @class */ (function () {\n    /**\n     * @function constructor\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.2\n     * @version 0.0.2\n     * @license MIT\n     * @copyright (c) Minimine 2018\n     *\n     * @description the constructor vor OnListener\n     * @param trigger the trigger\n     * @param func the Function to execute when the event apears\n     *\n     */\n    function OnListener(trigger, func) {\n        this.trigger = trigger;\n        this.func = func;\n    }\n    /**\n     * @see Listener#run\n     *\n     * @function run\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.2\n     * @version 0.0.2\n     * @license MIT\n     * @copyright (c) Minimine 2018\n     *\n     * @description executed when the event apears\n     * @param event the event\n     *\n     */\n    OnListener.prototype.run = function (event) {\n        this.func(event);\n    };\n    /**\n     * @see Listener#getType\n     *\n     * @function getType\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.2\n     * @version 0.0.2\n     * @license MIT\n     * @copyright (c) Minimine 2018\n     *\n     * @description returns the type of the event\n     * @return the Event type\n     */\n    OnListener.prototype.getType = function () {\n        return this.trigger;\n    };\n    return OnListener;\n}());\nexports.OnListener = OnListener;\nexports[\"default\"] = OnListener;\n","import Listener from \"./Listener\";\r\nimport Event from '../events/Event'\r\n\r\n/**\r\n * @class OnListener\r\n * @implements Listener\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.2\r\n * @version 0.0.2\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description Listening for a event by name (deprecated)\r\n * @deprecated on-Listeners are deprecated, make Listeners from the Listener interface\r\n *\r\n */\r\nclass OnListener implements Listener {\r\n  /**\r\n   * @var trigger\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the trigger event\r\n   *\r\n   */\r\n  trigger: string;\r\n\r\n  /**\r\n   * @var func\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Executed when event apears\r\n   *\r\n   */\r\n  func: Function;\r\n\r\n  /**\r\n   * @function constructor\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the constructor vor OnListener\r\n   * @param trigger the trigger\r\n   * @param func the Function to execute when the event apears\r\n   *\r\n   */\r\n  constructor(trigger: string, func: Function) {\r\n    this.trigger = trigger;\r\n    this.func = func;\r\n  }\r\n\r\n  /**\r\n   * @see Listener#run\r\n   *\r\n   * @function run\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description executed when the event apears\r\n   * @param event the event\r\n   *\r\n   */\r\n  run(event: Event) {\r\n    this.func(event);\r\n  }\r\n\r\n  /**\r\n   * @see Listener#getType\r\n   *\r\n   * @function getType\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description returns the type of the event\r\n   * @return the Event type\r\n   */\r\n  getType(): string {\r\n    return this.trigger;\r\n  }\r\n}\r\n\r\nexport default OnListener;\r\nexport { OnListener };\r\n"]}