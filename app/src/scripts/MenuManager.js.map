{"version":3,"sources":["MenuManager.js","MenuManager.ts"],"names":["exports","__esModule","electron_1","require","main_1","defaulttemplate","label","submenu","accelerator","click","mainWindow","webContents","send","close","role","type","_item","focusedWindow","reload","process","platform","toggleDevTools","shell","openExternal","name_1","app","getName","unshift","push","MenuManager","template","prototype","getMenu","Menu","buildFromTemplate","apply","_window","setApplicationMenu","pushItem","path","itemOptions","indexes","console","warn","insert","arr","value","indexesindex","splice","created","split","subs","i","length","alreadyExists","c","indexOf","ItemOptions"],"mappings":"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","file":"MenuManager.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar electron_1 = require(\"electron\");\nvar main_1 = require(\"../../main\");\nvar defaulttemplate = [\n    {\n        label: \"File\",\n        submenu: [\n            {\n                label: \"Save\",\n                accelerator: \"CmdOrCtrl+S\",\n                click: function () {\n                    main_1.mainWindow.webContents.send(\"menu_action\", \"file.save\");\n                }\n            },\n            {\n                label: \"Save as\",\n                accelerator: \"CmdOrCtrl+Shift+S\",\n                click: function () {\n                    main_1.mainWindow.webContents.send(\"menu_action\", \"file.save_as\");\n                }\n            } /*\n            {\n              label: 'Open File',\n              accelerator: 'CmdOrCtrl+S',\n              click: function() {mainWindow.webContents.send('menu_action','file.open');}\n            },\n            {\n              label: 'Open Folder',\n              accelerator: 'CmdOrCtrl+Shift+S',\n              click: function() {mainWindow.webContents.send('menu_action','file.open_folder');}\n            },*/,\n            {\n                label: \"New File\",\n                accelerator: \"CmdOrCtrl+N\",\n                click: function () {\n                    main_1.mainWindow.webContents.send(\"menu_action\", \"file.new\");\n                }\n            },\n            {\n                label: \"New Folder\",\n                accelerator: \"CmdOrCtrl+Shift+N\",\n                click: function () {\n                    main_1.mainWindow.webContents.send(\"menu_action\", \"file.new_folder\");\n                }\n            },\n            {\n                label: \"Exit\",\n                accelerator: \"Alt+F4\",\n                click: function () {\n                    main_1.mainWindow.close();\n                }\n            }\n        ]\n    },\n    {\n        label: \"Edit\",\n        submenu: [\n            {\n                role: \"undo\"\n            },\n            {\n                role: \"redo\"\n            },\n            {\n                type: \"separator\"\n            },\n            {\n                role: \"cut\"\n            },\n            {\n                role: \"copy\"\n            },\n            {\n                role: \"paste\"\n            },\n            {\n                role: \"pasteandmatchstyle\"\n            },\n            {\n                role: \"delete\"\n            },\n            {\n                role: \"selectall\"\n            }\n        ]\n    },\n    {\n        label: \"View\",\n        submenu: [\n            {\n                label: \"Reload\",\n                accelerator: \"CmdOrCtrl+R\",\n                click: function (_item, focusedWindow) {\n                    if (focusedWindow)\n                        focusedWindow.reload();\n                }\n            },\n            {\n                label: \"Toggle Developer Tools\",\n                accelerator: process.platform === \"darwin\" ? \"Alt+Command+I\" : \"Ctrl+Shift+I\",\n                click: function (_item, focusedWindow) {\n                    if (focusedWindow)\n                        focusedWindow.webContents.toggleDevTools();\n                }\n            },\n            {\n                type: \"separator\"\n            },\n            {\n                role: \"resetzoom\"\n            },\n            {\n                role: \"zoomin\"\n            },\n            {\n                role: \"zoomout\"\n            },\n            {\n                type: \"separator\"\n            },\n            {\n                role: \"togglefullscreen\"\n            }\n        ]\n    },\n    {\n        role: \"window\",\n        submenu: [\n            {\n                role: \"minimize\"\n            },\n            {\n                role: \"close\"\n            }\n        ]\n    },\n    {\n        role: \"help\",\n        submenu: [\n            {\n                label: \"Learn More\",\n                click: function () {\n                    require(\"electron\").shell.openExternal(\"http://electron.atom.io\");\n                }\n            }\n        ]\n    }\n];\nif (process.platform === \"darwin\") {\n    var name_1 = electron_1.app.getName();\n    defaulttemplate.unshift({\n        label: name_1,\n        submenu: [\n            {\n                role: \"about\"\n            },\n            {\n                type: \"separator\"\n            },\n            {\n                role: \"services\",\n                submenu: []\n            },\n            {\n                type: \"separator\"\n            },\n            {\n                role: \"hide\"\n            },\n            {\n                role: \"hideothers\"\n            },\n            {\n                role: \"unhide\"\n            },\n            {\n                type: \"separator\"\n            },\n            {\n                role: \"quit\"\n            }\n        ]\n    });\n    // Edit menu.\n    defaulttemplate[1].submenu.push({\n        type: \"separator\"\n    }, {\n        label: \"Speech\",\n        submenu: [\n            {\n                role: \"startspeaking\"\n            },\n            {\n                role: \"stopspeaking\"\n            }\n        ]\n    });\n    // Window menu.\n    defaulttemplate[3].submenu = [\n        {\n            label: \"Close\",\n            accelerator: \"CmdOrCtrl+W\",\n            role: \"close\"\n        },\n        {\n            label: \"Minimize\",\n            accelerator: \"CmdOrCtrl+M\",\n            role: \"minimize\"\n        },\n        {\n            label: \"Zoom\",\n            role: \"zoom\"\n        },\n        {\n            type: \"separator\"\n        },\n        {\n            label: \"Bring All to Front\",\n            role: \"front\"\n        }\n    ];\n}\nvar MenuManager = /** @class */ (function () {\n    function MenuManager(template) {\n        if (template === void 0) { template = defaulttemplate; }\n        this.template = template;\n    }\n    MenuManager.prototype.getMenu = function () {\n        return electron_1.Menu.buildFromTemplate(this.template);\n    };\n    MenuManager.prototype.apply = function (_window) {\n        electron_1.Menu.setApplicationMenu(this.getMenu());\n        return this;\n    };\n    // WARNING: Not ready and has errors\n    MenuManager.prototype.pushItem = function (path, itemOptions, indexes) {\n        if (indexes === void 0) { indexes = []; }\n        console.warn(\"Please do not use the pushItem method, it has bugs and may crash the program\");\n        function insert(arr, value, indexesindex) {\n            if (indexes[indexesindex] != null)\n                arr.splice(indexes[indexesindex], 0, created[0]);\n            else\n                arr.push(value);\n            return arr;\n        }\n        var split = path.split(\".\");\n        var subs = this.template;\n        var created = [];\n        for (var i = 0; i < split.length; i++) {\n            var alreadyExists = false;\n            for (var c = 0; c < subs.length; c++) {\n                if (subs[c].label == split[i]) {\n                    delete subs[subs.indexOf(subs[c])];\n                    if (created[i - 1])\n                        created[i - 1].submenu = subs;\n                    else\n                        this.template = subs;\n                    created.push(subs[i]);\n                    if (!subs[c].submenu)\n                        subs[c].submenu = [];\n                    subs = subs[c].submenu;\n                    alreadyExists = true;\n                    break;\n                }\n            }\n            if (!alreadyExists) {\n                created.push({ label: split[i], submenu: [] });\n                subs = [];\n            }\n        }\n        created[created.length - 1].submenu.push(itemOptions);\n        for (var i = created.length - 1; i > 0; i--) {\n            created[i - 1].submenu.push(created[i]);\n        }\n        this.template = insert(this.template, created[0], 0);\n    };\n    return MenuManager;\n}());\nexports.MenuManager = MenuManager;\nvar ItemOptions = /** @class */ (function () {\n    function ItemOptions() {\n    }\n    return ItemOptions;\n}());\nexports[\"default\"] = MenuManager;\n","import { BrowserWindow, Menu, app } from \"electron\";\r\nimport { mainWindow } from \"../../main\";\r\n\r\nconst defaulttemplate: ItemOptions[] = [\r\n  {\r\n    label: \"File\",\r\n    submenu: [\r\n      {\r\n        label: \"Save\",\r\n        accelerator: \"CmdOrCtrl+S\",\r\n        click: function() {\r\n          mainWindow.webContents.send(\"menu_action\", \"file.save\");\r\n        }\r\n      },\r\n      {\r\n        label: \"Save as\",\r\n        accelerator: \"CmdOrCtrl+Shift+S\",\r\n        click: function() {\r\n          mainWindow.webContents.send(\"menu_action\", \"file.save_as\");\r\n        }\r\n      } /*\r\n      {\r\n        label: 'Open File',\r\n        accelerator: 'CmdOrCtrl+S',\r\n        click: function() {mainWindow.webContents.send('menu_action','file.open');}\r\n      },\r\n      {\r\n        label: 'Open Folder',\r\n        accelerator: 'CmdOrCtrl+Shift+S',\r\n        click: function() {mainWindow.webContents.send('menu_action','file.open_folder');}\r\n      },*/,\r\n      {\r\n        label: \"New File\",\r\n        accelerator: \"CmdOrCtrl+N\",\r\n        click: function() {\r\n          mainWindow.webContents.send(\"menu_action\", \"file.new\");\r\n        }\r\n      },\r\n      {\r\n        label: \"New Folder\",\r\n        accelerator: \"CmdOrCtrl+Shift+N\",\r\n        click: function() {\r\n          mainWindow.webContents.send(\"menu_action\", \"file.new_folder\");\r\n        }\r\n      },\r\n      {\r\n        label: \"Exit\",\r\n        accelerator: \"Alt+F4\",\r\n        click: function() {\r\n          mainWindow.close();\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: \"Edit\",\r\n    submenu: [\r\n      {\r\n        role: \"undo\"\r\n      },\r\n      {\r\n        role: \"redo\"\r\n      },\r\n      {\r\n        type: \"separator\"\r\n      },\r\n      {\r\n        role: \"cut\"\r\n      },\r\n      {\r\n        role: \"copy\"\r\n      },\r\n      {\r\n        role: \"paste\"\r\n      },\r\n      {\r\n        role: \"pasteandmatchstyle\"\r\n      },\r\n      {\r\n        role: \"delete\"\r\n      },\r\n      {\r\n        role: \"selectall\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    label: \"View\",\r\n    submenu: [\r\n      {\r\n        label: \"Reload\",\r\n        accelerator: \"CmdOrCtrl+R\",\r\n        click(_item, focusedWindow) {\r\n          if (focusedWindow) focusedWindow.reload();\r\n        }\r\n      },\r\n      {\r\n        label: \"Toggle Developer Tools\",\r\n        accelerator:\r\n          process.platform === \"darwin\" ? \"Alt+Command+I\" : \"Ctrl+Shift+I\",\r\n        click(_item, focusedWindow) {\r\n          if (focusedWindow) focusedWindow.webContents.toggleDevTools();\r\n        }\r\n      },\r\n      {\r\n        type: \"separator\"\r\n      },\r\n      {\r\n        role: \"resetzoom\"\r\n      },\r\n      {\r\n        role: \"zoomin\"\r\n      },\r\n      {\r\n        role: \"zoomout\"\r\n      },\r\n      {\r\n        type: \"separator\"\r\n      },\r\n      {\r\n        role: \"togglefullscreen\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    role: \"window\",\r\n    submenu: [\r\n      {\r\n        role: \"minimize\"\r\n      },\r\n      {\r\n        role: \"close\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    role: \"help\",\r\n    submenu: [\r\n      {\r\n        label: \"Learn More\",\r\n        click() {\r\n          require(\"electron\").shell.openExternal(\"http://electron.atom.io\");\r\n        }\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nif (process.platform === \"darwin\") {\r\n  const name = app.getName();\r\n  defaulttemplate.unshift({\r\n    label: name,\r\n    submenu: [\r\n      {\r\n        role: \"about\"\r\n      },\r\n      {\r\n        type: \"separator\"\r\n      },\r\n      {\r\n        role: \"services\",\r\n        submenu: []\r\n      },\r\n      {\r\n        type: \"separator\"\r\n      },\r\n      {\r\n        role: \"hide\"\r\n      },\r\n      {\r\n        role: \"hideothers\"\r\n      },\r\n      {\r\n        role: \"unhide\"\r\n      },\r\n      {\r\n        type: \"separator\"\r\n      },\r\n      {\r\n        role: \"quit\"\r\n      }\r\n    ]\r\n  });\r\n  // Edit menu.\r\n  defaulttemplate[1].submenu.push(\r\n    {\r\n      type: \"separator\"\r\n    },\r\n    {\r\n      label: \"Speech\",\r\n      submenu: [\r\n        {\r\n          role: \"startspeaking\"\r\n        },\r\n        {\r\n          role: \"stopspeaking\"\r\n        }\r\n      ]\r\n    }\r\n  );\r\n  // Window menu.\r\n  defaulttemplate[3].submenu = [\r\n    {\r\n      label: \"Close\",\r\n      accelerator: \"CmdOrCtrl+W\",\r\n      role: \"close\"\r\n    },\r\n    {\r\n      label: \"Minimize\",\r\n      accelerator: \"CmdOrCtrl+M\",\r\n      role: \"minimize\"\r\n    },\r\n    {\r\n      label: \"Zoom\",\r\n      role: \"zoom\"\r\n    },\r\n    {\r\n      type: \"separator\"\r\n    },\r\n    {\r\n      label: \"Bring All to Front\",\r\n      role: \"front\"\r\n    }\r\n  ];\r\n}\r\n\r\nclass MenuManager {\r\n  template: any;\r\n  constructor(template = defaulttemplate) {\r\n    this.template = template;\r\n  }\r\n  getMenu() {\r\n    return Menu.buildFromTemplate(this.template);\r\n  }\r\n  apply(_window: BrowserWindow): MenuManager {\r\n    Menu.setApplicationMenu(this.getMenu());\r\n    return this;\r\n  }\r\n\r\n  // WARNING: Not ready and has errors\r\n  pushItem(path: string, itemOptions: ItemOptions, indexes: number[] = []) {\r\n    console.warn(\r\n      \"Please do not use the pushItem method, it has bugs and may crash the program\"\r\n    );\r\n    function insert(arr: any[], value: any, indexesindex: number) {\r\n      if (indexes[indexesindex] != null)\r\n        arr.splice(indexes[indexesindex], 0, created[0]);\r\n      else arr.push(value);\r\n      return arr;\r\n    }\r\n\r\n    let split: string[] = path.split(\".\");\r\n\r\n    let subs: ItemOptions[] = this.template;\r\n    let created: ItemOptions[] = [];\r\n    for (let i: number = 0; i < split.length; i++) {\r\n      let alreadyExists: boolean = false;\r\n      for (let c: number = 0; c < subs.length; c++) {\r\n        if (subs[c].label == split[i]) {\r\n          delete subs[subs.indexOf(subs[c])];\r\n          if (created[i - 1]) created[i - 1].submenu = subs;\r\n          else this.template = subs;\r\n          created.push(subs[i]);\r\n          if (!subs[c].submenu) subs[c].submenu = [];\r\n          subs = subs[c].submenu;\r\n          alreadyExists = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!alreadyExists) {\r\n        created.push({ label: split[i], submenu: [] });\r\n        subs = [];\r\n      }\r\n    }\r\n    created[created.length - 1].submenu.push(itemOptions);\r\n\r\n    for (let i: number = created.length - 1; i > 0; i--) {\r\n      created[i - 1].submenu.push(created[i]);\r\n    }\r\n\r\n    this.template = insert(this.template, created[0], 0);\r\n  }\r\n}\r\nclass ItemOptions {\r\n  label?: string;\r\n  role?: string;\r\n  accelerator?: string;\r\n  type?: string;\r\n  click?: Function;\r\n  submenu?: ItemOptions[];\r\n}\r\n\r\nexport default MenuManager;\r\nexport { MenuManager };\r\n"]}