{"version":3,"sources":["index.js","index.ts"],"names":["exports","__esModule","fs","require","PluginManager_1","SiteAPI","Preloader","Config_1","electron","$","global","toggleDevTools","ipcRenderer","send","openDevTools","closeDevTools","config","Config","document","write","working_dir","sendSync","icon","alert","content","toString","prompt","title","val","appdata","process","env","APPDATA","platform","HOME","datafolder","existsSync","mkdirSync","manager","PluginManager","start","readyPluginDir","loadSite","host","path","protocoll","ret","ready","rets","_loop_1","url","i","length","push","installPlugin","_err","rel","_i","ready_1","e","_a","rets_1","location","reload","JSON","parse","loadPlugins","MenuActionAPI","name","version","listeners","prototype","on","key","func","trigger","forEach","_x","arg","menuactionapi","api","getAPI","addStylesheet","__dirname","registerAPI","setupPlugins","startPlugins","window","addEventListener","stopPlugins","setTimeout","hide","click","target","tagName","toLowerCase","shell","openExternal","href","preventDefault"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar fs = require(\"fs\");\nvar PluginManager_1 = require(\"./src/scripts/PluginManager\");\nvar SiteAPI = require(\"./src/scripts/SiteApi\");\nvar Preloader = require(\"./src/scripts/Preloader\");\nvar Config_1 = require(\"./src/scripts/Config\");\nvar electron = require(\"electron\");\nvar $ = require(\"jquery\");\nglobal.toggleDevTools = function () {\n    electron.ipcRenderer.send(\"devtools\", \"toggle\");\n};\nglobal.openDevTools = function () {\n    electron.ipcRenderer.send(\"devtools\", \"open\");\n};\nglobal.closeDevTools = function () {\n    electron.ipcRenderer.send(\"devtools\", \"close\");\n};\nvar config = new Config_1.Config(\"config.yml\", \"yaml\");\ndocument.write(\"<!DOCTYPE html><html lang=\\\"en\\\" dir=\\\"ltr\\\"><head><meta charset=\\\"utf-8\\\"><title>MCScript Studio Code</title></head><body></body></html>\\\"\");\nglobal.working_dir = electron.ipcRenderer.sendSync(\"get_folder\", \"get_folder\")[0];\nglobal.icon = electron.ipcRenderer.sendSync(\"get_icon\", \"get_icon\");\nglobal.alert = function (content) {\n    return electron.ipcRenderer.sendSync(\"alert\", content.toString());\n};\nglobal.prompt = function (title, val) {\n    return electron.ipcRenderer.sendSync(\"prompt\", { title: title, val: val });\n};\nvar appdata = process.env.APPDATA ||\n    (process.platform == \"darwin\"\n        ? process.env.HOME + \"Library/Preferences\"\n        : \"/var/local\");\nvar datafolder = appdata + \"/mcscriptStudioCode\";\nif (!fs.existsSync(datafolder + \"/plugins\"))\n    fs.mkdirSync(datafolder + \"/plugins\");\nif (!fs.existsSync(datafolder))\n    fs.mkdirSync(datafolder);\nvar manager = new PluginManager_1.PluginManager();\nPreloader.start();\nmanager.readyPluginDir(datafolder + \"/plugins\");\nSiteAPI.loadSite({\n    host: \"raw.githubusercontent.com\",\n    path: \"/MinimineLP/mcscriptStudioCode/master/plugins/core-plugins.json\",\n    protocoll: \"https\"\n}, function (ret) {\n    var ready = [];\n    var rets = [];\n    var _loop_1 = function (url) {\n        var i = ready.length;\n        ready.push(false);\n        manager.installPlugin(url, datafolder + \"/plugins\", function (_err, ret) {\n            rets.push(ret);\n            ready[i] = true;\n            var rel = true;\n            for (var _i = 0, ready_1 = ready; _i < ready_1.length; _i++) {\n                var e = ready_1[_i];\n                if (e == false)\n                    rel = false;\n            }\n            if (rel) {\n                for (var _a = 0, rets_1 = rets; _a < rets_1.length; _a++) {\n                    var e = rets_1[_a];\n                    if (e) {\n                        location.reload();\n                        return;\n                    }\n                }\n            }\n        });\n    };\n    for (var _i = 0, _a = JSON.parse(ret); _i < _a.length; _i++) {\n        var url = _a[_i];\n        _loop_1(url);\n    }\n});\nmanager.loadPlugins(datafolder + \"/plugins\", function () {\n    var MenuActionAPI = /** @class */ (function () {\n        function MenuActionAPI() {\n            this.name = \"MenuAction\";\n            this.version = \"0.0.3\";\n            this.listeners = {};\n        }\n        MenuActionAPI.prototype.on = function (key, func) {\n            if (!this.listeners[key])\n                this.listeners[key] = [];\n            this.listeners[key].push(func);\n        };\n        MenuActionAPI.prototype.trigger = function (key) {\n            if (this.listeners[key])\n                this.listeners[key].forEach(function (func) {\n                    func();\n                });\n        };\n        return MenuActionAPI;\n    }());\n    electron.ipcRenderer.on(\"menu_action\", function (_x, arg) {\n        var menuactionapi = manager.api.getAPI(\"menu_action\");\n        menuactionapi.trigger(arg);\n    });\n    manager.api.addStylesheet(__dirname + \"/src/css/style.min.css\");\n    manager.api.registerAPI(\"menu_action\", new MenuActionAPI());\n    manager.setupPlugins();\n    manager.startPlugins();\n    window.addEventListener(\"unload\", function () {\n        manager.stopPlugins();\n    });\n    setTimeout(function () {\n        Preloader.hide();\n    }, 500);\n});\n$(\"html\").click(function (e) {\n    if (e.target.tagName.toLowerCase() == \"a\") {\n        //@ts-ignore\n        electron.shell.openExternal(e.target.href);\n        e.preventDefault();\n    }\n});\n","import * as fs from \"fs\";\r\nimport { PluginManager, Api } from \"./src/scripts/PluginManager\";\r\nimport * as SiteAPI from \"./src/scripts/SiteApi\";\r\nimport * as Preloader from \"./src/scripts/Preloader\";\r\nimport { Config } from \"./src/scripts/Config\";\r\nimport * as electron from \"electron\";\r\nimport * as $ from \"jquery\";\r\n\r\ndeclare let window: any;\r\ndeclare let global: any;\r\n\r\nglobal.toggleDevTools = function() {\r\n  electron.ipcRenderer.send(\"devtools\", \"toggle\");\r\n};\r\nglobal.openDevTools = function() {\r\n  electron.ipcRenderer.send(\"devtools\", \"open\");\r\n};\r\nglobal.closeDevTools = function() {\r\n  electron.ipcRenderer.send(\"devtools\", \"close\");\r\n};\r\n\r\nlet config = new Config(\"config.yml\", \"yaml\");\r\n\r\ndocument.write(\r\n  `<!DOCTYPE html><html lang=\"en\" dir=\"ltr\"><head><meta charset=\"utf-8\"><title>MCScript Studio Code</title></head><body></body></html>\"`\r\n);\r\n\r\nglobal.working_dir = electron.ipcRenderer.sendSync(\r\n  \"get_folder\",\r\n  \"get_folder\"\r\n)[0];\r\nglobal.icon = electron.ipcRenderer.sendSync(\"get_icon\", \"get_icon\");\r\n\r\nglobal.alert = function(content: any) {\r\n  return electron.ipcRenderer.sendSync(\"alert\", content.toString());\r\n};\r\n\r\nglobal.prompt = function(title, val) {\r\n  return electron.ipcRenderer.sendSync(\"prompt\", { title, val });\r\n};\r\n\r\nlet appdata =\r\n  process.env.APPDATA ||\r\n  (process.platform == \"darwin\"\r\n    ? process.env.HOME + \"Library/Preferences\"\r\n    : \"/var/local\");\r\nlet datafolder: string = appdata + \"/mcscriptStudioCode\";\r\nif (!fs.existsSync(`${datafolder}/plugins`))\r\n  fs.mkdirSync(`${datafolder}/plugins`);\r\n\r\nif (!fs.existsSync(datafolder)) fs.mkdirSync(datafolder);\r\n\r\nconst manager: PluginManager = new PluginManager();\r\nPreloader.start();\r\n\r\nmanager.readyPluginDir(`${datafolder}/plugins`);\r\n\r\nSiteAPI.loadSite(\r\n  {\r\n    host: \"raw.githubusercontent.com\",\r\n    path: \"/MinimineLP/mcscriptStudioCode/master/plugins/core-plugins.json\",\r\n    protocoll: \"https\"\r\n  },\r\n  function(ret) {\r\n    let ready: boolean[] = [];\r\n    let rets: boolean[] = [];\r\n    for (let url of JSON.parse(ret)) {\r\n      let i = ready.length;\r\n      ready.push(false);\r\n      manager.installPlugin(url, `${datafolder}/plugins`, (_err, ret) => {\r\n        rets.push(ret);\r\n        ready[i] = true;\r\n        let rel = true;\r\n        for (let e of ready) {\r\n          if (e == false) rel = false;\r\n        }\r\n        if (rel) {\r\n          for (let e of rets) {\r\n            if (e) {\r\n              location.reload();\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n);\r\n\r\nmanager.loadPlugins(datafolder + \"/plugins\", function() {\r\n  class MenuActionAPI implements Api {\r\n    name: string = \"MenuAction\";\r\n    version: string = \"0.0.3\";\r\n    listeners: any = {};\r\n    on(key: string, func: Function) {\r\n      if (!this.listeners[key]) this.listeners[key] = [];\r\n      this.listeners[key].push(func);\r\n    }\r\n    trigger(key: string) {\r\n      if (this.listeners[key])\r\n        this.listeners[key].forEach(function(func: () => any) {\r\n          func();\r\n        });\r\n    }\r\n  }\r\n  electron.ipcRenderer.on(\"menu_action\", function(_x, arg) {\r\n    let menuactionapi: MenuActionAPI = <MenuActionAPI> manager.api.getAPI(\"menu_action\");\r\n    menuactionapi.trigger(arg);\r\n  });\r\n\r\n  manager.api.addStylesheet(`${__dirname}/src/css/style.min.css`);\r\n  manager.api.registerAPI(\"menu_action\", new MenuActionAPI());\r\n  manager.setupPlugins();\r\n  manager.startPlugins();\r\n  window.addEventListener(\"unload\", function() {\r\n    manager.stopPlugins();\r\n  });\r\n  setTimeout(() => {\r\n    Preloader.hide();\r\n  }, 500);\r\n});\r\n\r\n$(\"html\").click(e => {\r\n  if (e.target.tagName.toLowerCase() == \"a\") {\r\n    //@ts-ignore\r\n    electron.shell.openExternal(e.target.href);\r\n    e.preventDefault();\r\n  }\r\n});\r\n"]}