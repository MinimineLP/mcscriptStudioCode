{"version":3,"sources":["Config.js","Config.ts"],"names":["exports","__esModule","module","FileFormatters","Config"],"mappings":"AAAA;;AACAA,QAAQC,UAAR,GAAqB,IAArB;AC4BAC,OAAOF,OAAP,GAAiB,EAAEG,gBAAcA,cAAhB,EAAkBC,QAAMA,MAAxB,EAAjB;AACAJ,QAAA,SAAA,IAAeI,MAAf","file":"Config.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nmodule.exports = { FileFormatters: FileFormatters, Config: Config };\nexports[\"default\"] = Config;\n","declare class Config {\r\n  file: string;\r\n  content: any;\r\n  parser: FileFormatters.FileFormatter;\r\n  constructor(file: string, parser?: string | FileFormatters.FileFormatter);\r\n  load(file?, parser?: string | FileFormatters.FileFormatter);\r\n  save(file?, parser?: string | FileFormatters.FileFormatter);\r\n  stringify(parser?: string | FileFormatters.FileFormatter): string;\r\n  contains(path: string, obj?: any);\r\n  get(path: string, obj?: any);\r\n  set(path: string, val: any);\r\n  remove(path: string);\r\n  setStandart(path: string, val: any);\r\n  concat(obj: object | Config);\r\n  apply(obj: object | Config);\r\n  list(obj?: Object): string[];\r\n}\r\n\r\ndeclare module FileFormatters {\r\n  export interface FileFormatter {\r\n    stringify(object: any): string;\r\n    parse(string: string): any;\r\n  }\r\n  export let Json: FileFormatter;\r\n  export let Yaml: FileFormatter;\r\n  export function fromString(from: string): FileFormatter;\r\n}\r\n\r\nexport { FileFormatters, Config };\r\nmodule.exports = { FileFormatters, Config };\r\nexport default Config;\r\n"]}