{"version":3,"sources":["PluginManager.js","PluginManager.ts"],"names":["exports","__esModule","global","srclocation","__dirname","PluginManager_1","require","PluginManager","PluginApi_1","PluginApi","Plugin_1","Plugin","Dependency_1","Dependency","OnListener_1","OnListener","Event"],"mappings":"AAAA;ACAA;;;;;;;;;ADSAA,QAAQC,UAAR,GAAqB,IAArB;ACCAC,OAAOC,WAAP,GAAqBC,SAArB;AAEA,IAAAC,kBAAAC,QAAA,+BAAA,CAAA;AA0BEN,QAAAO,aAAA,GA1BKF,gBAAA,SAAA,CA0BL;AAxBF,IAAAG,cAAAF,QAAA,2BAAA,CAAA;AAuBEN,QAAAS,SAAA,GAvBKD,YAAA,SAAA,CAuBL;AAtBF,IAAAE,WAAAJ,QAAA,wBAAA,CAAA;AAoBEN,QAAAW,MAAA,GApBKD,SAAA,SAAA,CAoBL;AAnBF,IAAAE,eAAAN,QAAA,4BAAA,CAAA;AA6BEN,QAAAa,UAAA,GA7BKD,aAAA,SAAA,CA6BL;AAzBF,IAAAE,eAAAR,QAAA,sCAAA,CAAA;AAwBEN,QAAAe,UAAA,GAxBKD,aAAA,SAAA,CAwBL;AAtBF;AACAZ,OAAOS,MAAP,GAAgBD,SAAA,SAAA,CAAhB;AACAR,OAAOW,UAAP,GAAoBD,aAAA,SAAA,CAApB;AACAV,OAAOO,SAAP,GAAmBD,YAAA,SAAA,CAAnB;AACAN,OAAOK,aAAP,GAAuBF,gBAAA,SAAA,CAAvB;AACAH,OAAOc,KAAP,GAAeA,KAAf;AACAd,OAAOa,UAAP,GAAoBD,aAAA,SAAA,CAApB;AAEA;AACAd,QAAA,SAAA,IAAeK,gBAAA,SAAA,CAAf","file":"PluginManager.js","sourcesContent":["\"use strict\";\n/**\n * @name PluginManager\n * @author Minimine <https://github.com/miniminelp>\n * @description this PluginManager is a part of the MCScriptStudioCode editor. It is Licensed under MIT License.\n * @license MIT\n * @copyright (c) Minimine 2018\n *\n */\nexports.__esModule = true;\nglobal.srclocation = __dirname;\nvar PluginManager_1 = require(\"./pluginmanager/PluginManager\");\nexports.PluginManager = PluginManager_1[\"default\"];\nvar PluginApi_1 = require(\"./pluginmanager/PluginApi\");\nexports.PluginApi = PluginApi_1[\"default\"];\nvar Plugin_1 = require(\"./pluginmanager/Plugin\");\nexports.Plugin = Plugin_1[\"default\"];\nvar Dependency_1 = require(\"./pluginmanager/Dependency\");\nexports.Dependency = Dependency_1[\"default\"];\nvar OnListener_1 = require(\"./pluginmanager/listeners/OnListener\");\nexports.OnListener = OnListener_1[\"default\"];\n// Make classes global usable\nglobal.Plugin = Plugin_1[\"default\"];\nglobal.Dependency = Dependency_1[\"default\"];\nglobal.PluginApi = PluginApi_1[\"default\"];\nglobal.PluginManager = PluginManager_1[\"default\"];\nglobal.Event = Event;\nglobal.OnListener = OnListener_1[\"default\"];\n// Export and return on require / import\nexports[\"default\"] = PluginManager_1[\"default\"];\n","/**\r\n * @name PluginManager\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @description this PluginManager is a part of the MCScriptStudioCode editor. It is Licensed under MIT License.\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n */\r\n\r\ndeclare let global;\r\nglobal.srclocation = __dirname;\r\n\r\nimport PluginManager from \"./pluginmanager/PluginManager\";\r\nimport Api from \"./pluginmanager/Api\";\r\nimport PluginApi from \"./pluginmanager/PluginApi\";\r\nimport Plugin from \"./pluginmanager/Plugin\";\r\nimport Dependency from \"./pluginmanager/Dependency\";\r\nimport Event from \"./pluginmanager/events/Event\";\r\nimport CancelableEvent from \"./pluginmanager/events/CancelableEvent\";\r\nimport Listener from \"./pluginmanager/listeners/Listener\";\r\nimport OnListener from \"./pluginmanager/listeners/OnListener\";\r\n\r\n// Make classes global usable\r\nglobal.Plugin = Plugin;\r\nglobal.Dependency = Dependency;\r\nglobal.PluginApi = PluginApi;\r\nglobal.PluginManager = PluginManager;\r\nglobal.Event = Event;\r\nglobal.OnListener = OnListener;\r\n\r\n// Export and return on require / import\r\nexport default PluginManager;\r\n\r\nexport {\r\n  // Standart APIs\r\n  Plugin,\r\n  Api,\r\n  PluginApi,\r\n  PluginManager,\r\n  // Events\r\n  Event,\r\n  CancelableEvent,\r\n  // Listeners\r\n  Listener,\r\n  OnListener,\r\n  Dependency\r\n};\r\n"]}