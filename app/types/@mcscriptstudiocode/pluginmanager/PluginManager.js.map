{"version":3,"sources":["PluginManager.js","PluginManager.ts"],"names":["exports","__esModule","PluginManager","module","Plugin","ServerApi","Event","OnListener","guid","deleteFolderRecursive","copyFolderRecursiveSync","copyFileSync"],"mappings":"AAAA,aASAA,QAAQC,YAAa,ECgjCrBD,QAAA,QAAeE,cAiBfC,OAAOH,QAAU,CAEfI,OAAOA,OAAQC,UAAUA,UAAWH,cAAcA,cAGlDI,MAAMA,MAGNC,WAAWA,WAGXC,KAAKA,KAAMC,sBAAsBA,sBAAuBC,wBAAwBA,wBAAyBC,aAAaA","file":"PluginManager.js","sourcesContent":["\"use strict\";\n/**\n * @name PluginManager\n * @author Minimine <https://github.com/miniminelp>\n * @description this PluginManager is a part of the MCScriptStudioCode editor. It is Licensed under MIT License.\n * @license MIT\n * @copyright (c) Minimine 2018\n *\n */\nexports.__esModule = true;\n/*\n **********************************************************************************************************************************\n **********************************************************************************************************************************\n Static\n **********************************************************************************************************************************\n **********************************************************************************************************************************\n */\n/*\n **********************************************************************************************************************************\n **********************************************************************************************************************************\n Exports\n **********************************************************************************************************************************\n **********************************************************************************************************************************\n */\n// Export and return on require / import\nexports[\"default\"] = PluginManager;\nmodule.exports = {\n    // Standart APIs\n    Plugin: Plugin, ServerApi: ServerApi, PluginManager: PluginManager,\n    // Events\n    Event: Event,\n    // Listeners\n    OnListener: OnListener,\n    // Functions\n    guid: guid, deleteFolderRecursive: deleteFolderRecursive, copyFolderRecursiveSync: copyFolderRecursiveSync, copyFileSync: copyFileSync\n};\n","/**\r\n * @name PluginManager\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @description this PluginManager is a part of the MCScriptStudioCode editor. It is Licensed under MIT License.\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n */\r\n\r\nimport * as fs from 'fs';\r\n\r\n/**\r\n * @class PluginManager\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.2\r\n * @version 0.0.2\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description The manager for the plugins\r\n *\r\n */\r\ndeclare class PluginManager {\r\n\r\n  static instance:PluginManager;\r\n\r\n  /**\r\n   * @var plugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description The loaded plugins\r\n   *\r\n   */\r\n  plugins: Plugin[];\r\n\r\n  /**\r\n   * @var api\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description The api\r\n   *\r\n   */\r\n  api: ServerApi;\r\n\r\n  /**\r\n   * @function constructor\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Constructor for Class PluginManager\r\n   *\r\n   */\r\n  constructor();\r\n\r\n  /**\r\n   * @function readyPluginDir\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   *\r\n   * @copyright (c) Minimine 2018\r\n   * @description makes the plugins ready\r\n   *\r\n   */\r\n  readyPluginDir(plugindir:string): void;\r\n\r\n  /**\r\n   * @function readyPlugin\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   *\r\n   * @copyright (c) Minimine 2018\r\n   * @description makes a plugin ready\r\n   *\r\n   */\r\n  readyPlugin(plugindir:string,plugin:string);\r\n\r\n  /**\r\n   * @function readyPluginDir\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   *\r\n   * @copyright (c) Minimine 2018\r\n   * @description Loads the plugins\r\n   *\r\n   */\r\n  readyPluginDir(plugindir:string): void;\r\n\r\n  /**\r\n   * @function loadPlugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   *\r\n   * @copyright (c) Minimine 2018\r\n   * @description Loads the plugins\r\n   *\r\n   */\r\n  loadPlugins(plugindir:string): void;\r\n\r\n  /**\r\n   * @function loadPlugin\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Loads a Plugin\r\n   * @param plugin the Plugin to load\r\n   * @return the plugin main file default class\r\n   *\r\n   */\r\n  loadPlugin(plugindir:string,plugin:string): Plugin;\r\n\r\n  /**\r\n   * @function setupPlugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description setups the plugins\r\n   *\r\n   */\r\n  setupPlugins(): void;\r\n\r\n  /**\r\n   * @function startPlugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Starts the plugins\r\n   *\r\n   */\r\n  startPlugins(): void;\r\n\r\n  /**\r\n   * @function stopPlugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description stops the plugins\r\n   *\r\n   */\r\n  stopPlugins(): void;\r\n\r\n  /**\r\n   * @function reloadPlugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description reloads the plugins\r\n   *\r\n   */\r\n  reloadPlugins(): void;\r\n\r\n  /**\r\n   * @function getPluginDescription\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description returns the description of a plugin\r\n   * @param plugin the Plugin to load\r\n   * @return the package.json content\r\n   *\r\n   */\r\n  getPluginDescription(plugindir:string,plugin:string): any;\r\n\r\n  /**\r\n   * @function getPlugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description scans for plugins in the plugindir\r\n   * @return the plugins in the plugindir\r\n   *\r\n   */\r\n  getPlugins(plugindir): string[];\r\n\r\n  /**\r\n   * @function fireEvent\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   * @description register a listener\r\n   *\r\n   * @param event the Event to fire\r\n   */\r\n  fireEvent(event:Event):Event;\r\n\r\n  /**\r\n   * @function installPlugin\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   * @description install a plugin (by url into pluginfolder)\r\n   *\r\n   * @param url the url\r\n   * @param pluginfolder the pluginfoder\r\n   */\r\n  installPlugin(url:string, pluginfolder:string);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @class ServerApi\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.2\r\n * @version 0.0.2\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description The Api to manage the server\r\n *\r\n */\r\ndeclare class ServerApi {\r\n\r\n  /**\r\n   * @var listeners\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description contains the listeners\r\n   *\r\n   */\r\n  listeners:Array<Listener>;\r\n\r\n  /**\r\n   * @var apis\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the api register (can be got)\r\n   *\r\n   */\r\n  apis: any;\r\n\r\n  /**\r\n   * @var manager\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description The the plugin manager\r\n   *\r\n   */\r\n  manager: PluginManager;\r\n\r\n  /**\r\n   * @var plugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description All the registered Plugins\r\n   *\r\n   */\r\n  plugins: Plugin[];\r\n\r\n  /**\r\n   * @function constructor\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Constructorclass for the ServerApi\r\n   */\r\n  constructor(manager:PluginManager);\r\n\r\n  /**\r\n   * @function on\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description register a function as listener by event name\r\n   * @deprecated Use ServerApi#registerListener(Listener)\r\n   * @param event the event to listen for\r\n   * @param func the function to execute when event appears\r\n   */\r\n  on(event:string, func:Function);\r\n\r\n  /**\r\n   * @function registerListener\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description register a listener\r\n   * @param listener the listener to register\r\n   */\r\n  registerListener(listener:Listener);\r\n\r\n  /**\r\n   * @function fireEvent\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description register a listener\r\n   * @param event the Event to fire\r\n   *\r\n   */\r\n  fireEvent(event:Event):Event;\r\n\r\n\r\n  /**\r\n   * @function addStylesheet\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description loads a css stylesheet via a <link> tag\r\n   * @param stylesheet the script path\r\n   *\r\n   */\r\n  addStylesheet(stylesheet:string);\r\n\r\n\r\n  /**\r\n   * @function addScript\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @deprecated please use require(yourscript) instead\r\n   * @description loads a javascript via a <script src=\"yourscript\"></script>\r\n   * @param script the element's path\r\n   *\r\n   */\r\n  addScript(script:string);\r\n\r\n\r\n  /**\r\n   * @function addElement\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description adds an element to the document's body\r\n   * @param element the element to add\r\n   *\r\n   */\r\n  addElement(element:string|HTMLElement);\r\n\r\n  /**\r\n   * @function registerAPI\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n\r\n   * @description register a api\r\n   * @param key the api key\r\n   * @param api the api\r\n   */\r\n  registerAPI(key:string, api:any):void;\r\n\r\n  /**\r\n   * @function getAPI\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n\r\n   * @description get a api\r\n   * @param key the api key\r\n   * @return the api\r\n   */\r\n  getAPI(key:string):any;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @class Plugin\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.2\r\n * @version 0.0.2\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description the plugin definition\r\n * @abstract\r\n *\r\n */\r\ndeclare abstract class Plugin {\r\n\r\n  /**\r\n   * @var name\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the plugin's name\r\n   *\r\n   */\r\n  name:string;\r\n\r\n  /**\r\n   * @var url\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the plugin's url\r\n   *\r\n   */\r\n  url:string;\r\n\r\n  /**\r\n   * @var author\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the plugin's author(s)\r\n   *\r\n   */\r\n  author:string|string[];\r\n\r\n  /**\r\n   * @var author_url\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the plugin authors's url(s)\r\n   *\r\n   */\r\n  author_url:string|string[];\r\n\r\n  /**\r\n   * @var version\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the plugin's version\r\n   *\r\n   */\r\n  version:string;\r\n\r\n  /**\r\n   * @var main\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the plugin's main file\r\n   *\r\n   */\r\n  main:string;\r\n\r\n  /**\r\n   * @var dependencies\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the plugin's dependencies\r\n   *\r\n   */\r\n  dependencies: Dependency[];\r\n\r\n  /**\r\n   * @var path\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the plugin's path\r\n   *\r\n   */\r\n  path: string;\r\n\r\n  /**\r\n   * @function constructor\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Constructor for the Plugin class\r\n   * @param name the plugin's name\r\n   * @param url the plugin's url\r\n   * @param author the plugin's author(s)\r\n   * @param author_url the plugin author's url(s)\r\n   * @param version the plugin's version\r\n   * @param main the plugin's main file\r\n   *\r\n   */\r\n  constructor(name:string, url:string, author:string|string[], author_url:string|string[], version:string, main:string, dependencies:Dependency[], path:string);\r\n\r\n  /**\r\n   * @function setup\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description The setup method for the plugin\r\n   * @param server the server APIs\r\n   * @abstract\r\n   *\r\n   */\r\n  abstract setup(server:ServerApi);\r\n\r\n  /**\r\n   * @function start\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description The start method for the plugin\r\n   * @param server the server APIs\r\n   * @abstract\r\n   *\r\n   */\r\n  abstract start(server:ServerApi);\r\n\r\n  /**\r\n   * @function register\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description The stop method for the plugin\r\n   * @param server the server APIs\r\n   * @abstract\r\n   *\r\n   */\r\n  abstract stop(server:ServerApi);\r\n\r\n  /**\r\n   * @function register\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description The reload method for the plugin\r\n   * @param server the server APIs\r\n   * @abstract\r\n   *\r\n   */\r\n  abstract reload(server:ServerApi);\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @class Dependency\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.3\r\n * @version 0.0.3\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description the dependency definition\r\n * @abstract\r\n *\r\n */\r\ndeclare class Dependency {\r\n\r\n  /**\r\n   * @var name\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the dependencies name\r\n   *\r\n   */\r\n  name:string;\r\n\r\n  /**\r\n   * @var name\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the dependencies name\r\n   *\r\n   */\r\n  url:string;\r\n\r\n  /**\r\n   * @var plugin\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the plugin\r\n   *\r\n   */\r\n  plugin:Plugin;\r\n\r\n  /**\r\n   * @function constructor\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Constructor for the Dependency class\r\n   * @param name the plugin's name\r\n   * @param url the plugin's url\r\n   *\r\n   */\r\n  constructor(name:string, url:string, plugindir:string, requiredBy:string);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n **********************************************************************************************************************************\r\n **********************************************************************************************************************************\r\n Events\r\n **********************************************************************************************************************************\r\n **********************************************************************************************************************************\r\n */\r\n\r\n\r\n\r\n\r\n\r\n /**\r\n  * @interface Event\r\n  * @author Minimine <https://github.com/miniminelp>\r\n  * @since 0.0.2\r\n  * @version 0.0.2\r\n  * @license MIT\r\n  * @copyright (c) Minimine 2018\r\n  *\r\n  * @description Event interface\r\n  *\r\n  */\r\ndeclare interface Event {\r\n\r\n  /**\r\n   * @function getType\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Returns the event's type\r\n   *\r\n   */\r\n  getType():string;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @interface CancelableEvent\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.2\r\n * @version 0.0.2\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description CancelableEvent Event\r\n * @extends Event\r\n *\r\n */\r\ndeclare interface CancelableEvent extends Event {\r\n\r\n  /**\r\n   * @var canceled\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description saves if the event is canceled\r\n   *\r\n   */\r\n  canceled: boolean;\r\n\r\n  /**\r\n   * @function cancel\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description cancels the Event (or the default reaction)\r\n   *\r\n   */\r\n  cancel();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n **********************************************************************************************************************************\r\n **********************************************************************************************************************************\r\n Listeners\r\n **********************************************************************************************************************************\r\n **********************************************************************************************************************************\r\n */\r\n\r\n\r\n\r\n\r\n /**\r\n  * @interface Listener\r\n  * @author Minimine <https://github.com/miniminelp>\r\n  * @since 0.0.2\r\n  * @version 0.0.2\r\n  * @license MIT\r\n  * @copyright (c) Minimine 2018\r\n  *\r\n  * @description The Listener inteface.\r\n  */\r\ndeclare interface Listener {\r\n\r\n  /**\r\n   * @function getType\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description get the listener type (the event the listener is waiting for)\r\n   * @return the type\r\n   *\r\n   */\r\n  getType():string;\r\n\r\n  /**\r\n   * @function run\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Runs the listener\r\n   * @param event the Event\r\n   *\r\n   */\r\n  run(event:Event):void;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * @class OnListener\r\n * @implements Listener\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.2\r\n * @version 0.0.2\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description Listening for a event by name (deprecated)\r\n * @deprecated on-Listeners are deprecated, make Listeners from the Listener interface\r\n *\r\n */\r\ndeclare class OnListener implements Listener {\r\n\r\n  /**\r\n   * @var trigger\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the trigger event\r\n   *\r\n   */\r\n  trigger:string;\r\n\r\n  /**\r\n   * @var func\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Executed when event apears\r\n   *\r\n   */\r\n  func:Function;\r\n\r\n  /**\r\n   * @function constructor\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the constructor vor OnListener\r\n   * @param trigger the trigger\r\n   * @param func the Function to execute when the event apears\r\n   *\r\n   */\r\n  constructor(trigger:string, func:Function);\r\n\r\n  /**\r\n   * @see Listener#run\r\n   *\r\n   * @function run\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description executed when the event apears\r\n   * @param event the event\r\n   *\r\n   */\r\n  run(event: Event);\r\n\r\n  /**\r\n   * @see Listener#getType\r\n   *\r\n   * @function getType\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description returns the type of the event\r\n   * @return the Event type\r\n   */\r\n  getType(): string;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n **********************************************************************************************************************************\r\n **********************************************************************************************************************************\r\n Functions\r\n **********************************************************************************************************************************\r\n **********************************************************************************************************************************\r\n */\r\n\r\n\r\n\r\n\r\n/**\r\n * @function guid\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.1\r\n * @version 0.0.1\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description returns a random uuid\r\n * @return random uuid\r\n *\r\n */\r\ndeclare function guid();\r\n\r\n\r\n\r\n\r\n/**\r\n * @function copyFileSync\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.3\r\n * @version 0.0.3\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description copys a file\r\n * @param source the source file\r\n * @param target the paste target\r\n *\r\n */\r\ndeclare function copyFileSync( source, target );\r\n\r\n\r\n\r\n\r\n/**\r\n * @function copyFolderRecursiveSync\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.3\r\n * @version 0.0.3\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description copys a folder recursively\r\n * @param source the source folder\r\n * @param target the paste target\r\n * @param useOldName should a sub folder created with the old name? default: true\r\n *\r\n */\r\ndeclare function copyFolderRecursiveSync( source: string, target: string, useOldName?:boolean );\r\n\r\n\r\n\r\n\r\n/**\r\n * @function deleteFolderRecursive\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.3\r\n * @version 0.0.3\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description deletes a folder recursively\r\n * @param path the folder to delete\r\n *\r\n */\r\ndeclare function deleteFolderRecursive (path: fs.PathLike);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n **********************************************************************************************************************************\r\n **********************************************************************************************************************************\r\n Static\r\n **********************************************************************************************************************************\r\n **********************************************************************************************************************************\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n /*\r\n  **********************************************************************************************************************************\r\n  **********************************************************************************************************************************\r\n  Exports\r\n  **********************************************************************************************************************************\r\n  **********************************************************************************************************************************\r\n  */\r\n// Export and return on require / import\r\nexport default PluginManager;\r\n\r\nexport {\r\n  // Standart APIs\r\n  Plugin, ServerApi, PluginManager,\r\n\r\n  // Events\r\n  Event, CancelableEvent,\r\n\r\n  // Listeners\r\n  Listener, OnListener,\r\n\r\n  // Functions\r\n  guid, deleteFolderRecursive, copyFolderRecursiveSync, copyFileSync,\r\n};\r\n\r\n\r\nmodule.exports = {\r\n  // Standart APIs\r\n  Plugin:Plugin, ServerApi:ServerApi, PluginManager:PluginManager,\r\n\r\n  // Events\r\n  Event:Event,\r\n\r\n  // Listeners\r\n  OnListener:OnListener,\r\n\r\n  // Functions\r\n  guid:guid, deleteFolderRecursive:deleteFolderRecursive, copyFolderRecursiveSync:copyFolderRecursiveSync, copyFileSync:copyFileSync,\r\n}\r\n"]}