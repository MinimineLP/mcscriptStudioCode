{"version":3,"sources":["PluginApi.js","PluginApi.ts"],"names":["exports","__esModule","OnListener_1","require","PluginApi","manager","name","version","listeners","apis","plugins","prototype","on","event","func","registerListener","listener","push","fireEvent","type","getType","_i","_a","length","run","addStylesheet","stylesheet","document","getElementById","head","getElementsByTagName","link","createElement","id","rel","href","media","appendChild","addScript","script","console","warn","src","addElement","element","HTMLElement","body","$","append","registerAPI","key","api","getAPI"],"mappings":"AAAA;;AACAA,QAAQC,UAAR,GAAqB,IAArB;ACEA,IAAAC,eAAAC,QAAA,wBAAA,CAAA;AAKA;;;;;;;;;;;AAWA,IAAAC,YAAA,aAAA,YAAA;AAgFE;;;;;;;;;;AAUA,aAAAA,SAAA,CAAYC,OAAZ,EAAkC;AAxFlC;;;;;;;;;;;AAWA,aAAAC,IAAA,GAAe,OAAf;AAEA;;;;;;;;;;;AAWA,aAAAC,OAAA,GAAkB,OAAlB;AAEA;;;;;;;;;;;AAWA,aAAAC,SAAA,GAA6B,EAA7B;AAEA;;;;;;;;;;;AAWA,aAAAC,IAAA,GAAiB,EAAjB;AAuCE,aAAKJ,OAAL,GAAeA,OAAf;AACA,aAAKK,OAAL,GAAeL,QAAQK,OAAvB;AACD;AAED;;;;;;;;;;;;;AAaAN,cAAAO,SAAA,CAAAC,EAAA,GAAA,UAAGC,KAAH,EAAkBC,IAAlB,EAAgC;AAC9B,aAAKC,gBAAL,CAAsB,IAAIb,aAAA,SAAA,CAAJ,CAAeW,KAAf,EAAsBC,IAAtB,CAAtB;AACD,KAFD;AAIA;;;;;;;;;;;AAWAV,cAAAO,SAAA,CAAAI,gBAAA,GAAA,UAAiBC,QAAjB,EAAmC;AACjC,aAAKR,SAAL,CAAeS,IAAf,CAAoBD,QAApB;AACD,KAFD;AAIA;;;;;;;;;;;;AAYAZ,cAAAO,SAAA,CAAAO,SAAA,GAAA,UAAUL,KAAV,EAAsB;AACpB,YAAIM,OAAON,MAAMO,OAAN,EAAX;AACA,aAAqB,IAAAC,KAAA,CAAA,EAAAC,KAAA,KAAKd,SAA1B,EAAqBa,KAAAC,GAAAC,MAArB,EAAqBF,IAArB,EAAqC;AAAhC,gBAAIL,WAAQM,GAAAD,EAAA,CAAZ;AACH,gBAAIL,SAASI,OAAT,MAAsBD,IAA1B,EAAgC;AAC9BH,yBAASQ,GAAT,CAAaX,KAAb;AACD;AACF;AACD,eAAOA,KAAP;AACD,KARD;AAUA;;;;;;;;;;;;AAYAT,cAAAO,SAAA,CAAAc,aAAA,GAAA,UAAcC,UAAd,EAAgC;AAC9B,YAAI,CAACC,SAASC,cAAT,CAAwBF,UAAxB,CAAL,EAA0C;AACxC,gBAAIG,OAAwBF,SAASG,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAA5B;AACA,gBAAIC,OAAwBJ,SAASK,aAAT,CAAuB,MAAvB,CAA5B;AACAD,iBAAKE,EAAL,GAAUP,UAAV;AACAK,iBAAKG,GAAL,GAAW,YAAX;AACAH,iBAAKZ,IAAL,GAAY,UAAZ;AACAY,iBAAKI,IAAL,GAAYT,UAAZ;AACAK,iBAAKK,KAAL,GAAa,KAAb;AACAP,iBAAKQ,WAAL,CAAiBN,IAAjB;AACD;AACF,KAXD;AAaA;;;;;;;;;;;;;AAaA3B,cAAAO,SAAA,CAAA2B,SAAA,GAAA,UAAUC,MAAV,EAAwB;AACtBC,gBAAQC,IAAR,CACE,uFADF;AAGA;AACA,YAAI,CAACd,SAASC,cAAT,CAAwBW,MAAxB,CAAL,EAAsC;AACpC,gBAAIV,OAAwBF,SAASG,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAA5B;AACA,gBAAIC,OAA0BJ,SAASK,aAAT,CAAuB,QAAvB,CAA9B;AACAD,iBAAKE,EAAL,GAAUM,MAAV;AACAR,iBAAKZ,IAAL,GAAY,iBAAZ;AACAY,iBAAKW,GAAL,GAAWH,MAAX;AACAV,iBAAKQ,WAAL,CAAiBN,IAAjB;AACD;AACF,KAbD;AAeA;;;;;;;;;;;;AAYA3B,cAAAO,SAAA,CAAAgC,UAAA,GAAA,UAAWC,OAAX,EAAwC;AACtC,YAAIA,mBAAmBC,WAAvB,EAAoClB,SAASmB,IAAT,CAAcT,WAAd,CAA0BO,OAA1B,EAApC,KACKG,EAAE,MAAF,EAAUC,MAAV,CAAiBJ,OAAjB;AACN,KAHD;AAKA;;;;;;;;;;;AAYAxC,cAAAO,SAAA,CAAAsC,WAAA,GAAA,UAAYC,GAAZ,EAAyBC,GAAzB,EAAiC;AAC/B,aAAK1C,IAAL,CAAUyC,GAAV,IAAiBC,GAAjB;AACD,KAFD;AAIA;;;;;;;;;;;AAYA/C,cAAAO,SAAA,CAAAyC,MAAA,GAAA,UAAOF,GAAP,EAAkB;AAChB,eAAO,KAAKzC,IAAL,CAAUyC,GAAV,CAAP;AACD,KAFD;AAGF,WAAA9C,SAAA;AA1PA,CAAA,EAAA;AA6PSJ,QAAAI,SAAA,GAAAA,SAAA;AADTJ,QAAA,SAAA,IAAeI,SAAf","file":"PluginApi.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar OnListener_1 = require(\"./listeners/OnListener\");\n/**\n * @class PluginApi\n * @author Minimine <https://github.com/miniminelp>\n * @since 0.0.2\n * @version 0.0.3\n * @license MIT\n * @copyright (c) Minimine 2018 - 2019\n *\n * @description The Api to manage the server\n *\n */\nvar PluginApi = /** @class */ (function () {\n    /**\n     * @function constructor\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.3\n     * @version 0.0.3\n     * @license MIT\n     * @copyright (c) Minimine 2018\n     *\n     * @description Constructorclass for the ServerApi\n     */\n    function PluginApi(manager) {\n        /**\n         * @var name\n         * @author Minimine <https://github.com/miniminelp>\n         * @since 0.0.3\n         * @version 0.0.3\n         * @license MIT\n         * @copyright (c) Minimine 2019\n         *\n         * @description the name\n         *\n         */\n        this.name = \"0.0.3\";\n        /**\n         * @var version\n         * @author Minimine <https://github.com/miniminelp>\n         * @since 0.0.3\n         * @version 0.0.3\n         * @license MIT\n         * @copyright (c) Minimine 2019\n         *\n         * @description the version\n         *\n         */\n        this.version = \"0.0.3\";\n        /**\n         * @var listeners\n         * @author Minimine <https://github.com/miniminelp>\n         * @since 0.0.2\n         * @version 0.0.2\n         * @license MIT\n         * @copyright (c) Minimine 2018\n         *\n         * @description contains the listeners\n         *\n         */\n        this.listeners = [];\n        /**\n         * @var apis\n         * @author Minimine <https://github.com/miniminelp>\n         * @since 0.0.2\n         * @version 0.0.3\n         * @license MIT\n         * @copyright (c) Minimine 2018\n         *\n         * @description the api register (can be got)\n         *\n         */\n        this.apis = {};\n        this.manager = manager;\n        this.plugins = manager.plugins;\n    }\n    /**\n     * @function on\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.2\n     * @version 0.0.2\n     * @license MIT\n     * @copyright (c) Minimine 2018\n     *\n     * @description register a function as listener by event name\n     * @deprecated Use ServerApi#registerListener(Listener)\n     * @param event the event to listen for\n     * @param func the function to execute when event appears\n     */\n    PluginApi.prototype.on = function (event, func) {\n        this.registerListener(new OnListener_1[\"default\"](event, func));\n    };\n    /**\n     * @function registerListener\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.2\n     * @version 0.0.2\n     * @license MIT\n     * @copyright (c) Minimine 2018\n     *\n     * @description register a listener\n     * @param listener the listener to register\n     */\n    PluginApi.prototype.registerListener = function (listener) {\n        this.listeners.push(listener);\n    };\n    /**\n     * @function fireEvent\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.2\n     * @version 0.0.2\n     * @license MIT\n     * @copyright (c) Minimine 2018\n     *\n     * @description register a listener\n     * @param event the Event to fire\n     *\n     */\n    PluginApi.prototype.fireEvent = function (event) {\n        var type = event.getType();\n        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {\n            var listener = _a[_i];\n            if (listener.getType() == type) {\n                listener.run(event);\n            }\n        }\n        return event;\n    };\n    /**\n     * @function addStylesheet\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.2\n     * @version 0.0.3\n     * @license MIT\n     * @copyright (c) Minimine 2018\n     *\n     * @description loads a css stylesheet via a <link> tag\n     * @param stylesheet the script path\n     *\n     */\n    PluginApi.prototype.addStylesheet = function (stylesheet) {\n        if (!document.getElementById(stylesheet)) {\n            var head = document.getElementsByTagName(\"head\")[0];\n            var link = document.createElement(\"link\");\n            link.id = stylesheet;\n            link.rel = \"stylesheet\";\n            link.type = \"text/css\";\n            link.href = stylesheet;\n            link.media = \"all\";\n            head.appendChild(link);\n        }\n    };\n    /**\n     * @function addScript\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.2\n     * @version 0.0.3\n     * @license MIT\n     * @copyright (c) Minimine 2018\n     *\n     * @deprecated please use require(yourscript) instead\n     * @description loads a javascript via a <script src=\"yourscript\"></script>\n     * @param script the element's path\n     *\n     */\n    PluginApi.prototype.addScript = function (script) {\n        console.warn(\"Please use require(yourscript) instead of the deprecated method ServerApi#addScript()\");\n        //console.log(`Loaded script from \"${script}\"`);\n        if (!document.getElementById(script)) {\n            var head = document.getElementsByTagName(\"head\")[0];\n            var link = document.createElement(\"script\");\n            link.id = script;\n            link.type = \"text/javascript\";\n            link.src = script;\n            head.appendChild(link);\n        }\n    };\n    /**\n     * @function addElement\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.2\n     * @version 0.0.3\n     * @license MIT\n     * @copyright (c) Minimine 2018\n     *\n     * @description adds an element to the document's body\n     * @param element the element to add\n     *\n     */\n    PluginApi.prototype.addElement = function (element) {\n        if (element instanceof HTMLElement)\n            document.body.appendChild(element);\n        else\n            $(\"body\").append(element);\n    };\n    /**\n     * @function registerAPI\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.2\n     * @version 0.0.3\n     * @license MIT\n     * @copyright (c) Minimine 2018\n  \r\n     * @description register a api\n     * @param key the api key\n     * @param api the api\n     */\n    PluginApi.prototype.registerAPI = function (key, api) {\n        this.apis[key] = api;\n    };\n    /**\n     * @function getAPI\n     * @author Minimine <https://github.com/miniminelp>\n     * @since 0.0.2\n     * @version 0.0.3\n     * @license MIT\n     * @copyright (c) Minimine 2018\n  \r\n     * @description get a api\n     * @param key the api key\n     * @return the api\n     */\n    PluginApi.prototype.getAPI = function (key) {\n        return this.apis[key];\n    };\n    return PluginApi;\n}());\nexports.PluginApi = PluginApi;\nexports[\"default\"] = PluginApi;\n","import Event from \"./events/Event\";\r\nimport Listener from \"./listeners/Listener\";\r\nimport PluginManager from \"./PluginManager\";\r\nimport OnListener from \"./listeners/OnListener\";\r\nimport Plugin from \"./Plugin\";\r\nimport Api from \"./Api\";\r\nimport { Map } from \"../../Util\";\r\n\r\n/**\r\n * @class PluginApi\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.2\r\n * @version 0.0.3\r\n * @license MIT\r\n * @copyright (c) Minimine 2018 - 2019\r\n *\r\n * @description The Api to manage the server\r\n *\r\n */\r\nclass PluginApi implements Api {\r\n\r\n  /**\r\n   * @var name\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2019\r\n   *\r\n   * @description the name\r\n   *\r\n   */\r\n  name: string = \"0.0.3\";\r\n\r\n  /**\r\n   * @var version\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2019\r\n   *\r\n   * @description the version\r\n   *\r\n   */\r\n  version: string = \"0.0.3\";\r\n\r\n  /**\r\n   * @var listeners\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description contains the listeners\r\n   *\r\n   */\r\n  listeners: Array<Listener> = [];\r\n\r\n  /**\r\n   * @var apis\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description the api register (can be got)\r\n   *\r\n   */\r\n  apis: Map<Api> = {};\r\n\r\n  /**\r\n   * @var manager\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description The the plugin manager\r\n   *\r\n   */\r\n  manager: PluginManager;\r\n\r\n  /**\r\n   * @var plugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description All the registered Plugins\r\n   *\r\n   */\r\n  plugins: Plugin[];\r\n\r\n  /**\r\n   * @function constructor\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Constructorclass for the ServerApi\r\n   */\r\n  constructor(manager: PluginManager) {\r\n    this.manager = manager;\r\n    this.plugins = manager.plugins;\r\n  }\r\n\r\n  /**\r\n   * @function on\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description register a function as listener by event name\r\n   * @deprecated Use ServerApi#registerListener(Listener)\r\n   * @param event the event to listen for\r\n   * @param func the function to execute when event appears\r\n   */\r\n  on(event: string, func: Function) {\r\n    this.registerListener(new OnListener(event, func));\r\n  }\r\n\r\n  /**\r\n   * @function registerListener\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description register a listener\r\n   * @param listener the listener to register\r\n   */\r\n  registerListener(listener: Listener) {\r\n    this.listeners.push(listener);\r\n  }\r\n\r\n  /**\r\n   * @function fireEvent\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description register a listener\r\n   * @param event the Event to fire\r\n   *\r\n   */\r\n  fireEvent(event: Event): Event {\r\n    let type = event.getType();\r\n    for (let listener of this.listeners) {\r\n      if (listener.getType() == type) {\r\n        listener.run(event);\r\n      }\r\n    }\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * @function addStylesheet\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description loads a css stylesheet via a <link> tag\r\n   * @param stylesheet the script path\r\n   *\r\n   */\r\n  addStylesheet(stylesheet: string) {\r\n    if (!document.getElementById(stylesheet)) {\r\n      var head: HTMLHeadElement = document.getElementsByTagName(\"head\")[0];\r\n      var link: HTMLLinkElement = document.createElement(\"link\");\r\n      link.id = stylesheet;\r\n      link.rel = \"stylesheet\";\r\n      link.type = \"text/css\";\r\n      link.href = stylesheet;\r\n      link.media = \"all\";\r\n      head.appendChild(link);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function addScript\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @deprecated please use require(yourscript) instead\r\n   * @description loads a javascript via a <script src=\"yourscript\"></script>\r\n   * @param script the element's path\r\n   *\r\n   */\r\n  addScript(script: string) {\r\n    console.warn(\r\n      \"Please use require(yourscript) instead of the deprecated method ServerApi#addScript()\"\r\n    );\r\n    //console.log(`Loaded script from \"${script}\"`);\r\n    if (!document.getElementById(script)) {\r\n      var head: HTMLHeadElement = document.getElementsByTagName(\"head\")[0];\r\n      var link: HTMLScriptElement = document.createElement(\"script\");\r\n      link.id = script;\r\n      link.type = \"text/javascript\";\r\n      link.src = script;\r\n      head.appendChild(link);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @function addElement\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description adds an element to the document's body\r\n   * @param element the element to add\r\n   *\r\n   */\r\n  addElement(element: string | HTMLElement) {\r\n    if (element instanceof HTMLElement) document.body.appendChild(element);\r\n    else $(\"body\").append(element);\r\n  }\r\n\r\n  /**\r\n   * @function registerAPI\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n\r\n   * @description register a api\r\n   * @param key the api key\r\n   * @param api the api\r\n   */\r\n  registerAPI(key: string, api: Api): void {\r\n    this.apis[key] = api;\r\n  }\r\n\r\n  /**\r\n   * @function getAPI\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n\r\n   * @description get a api\r\n   * @param key the api key\r\n   * @return the api\r\n   */\r\n  getAPI(key: string): Api {\r\n    return this.apis[key];\r\n  }\r\n}\r\n\r\nexport default PluginApi;\r\nexport { PluginApi };\r\n"]}