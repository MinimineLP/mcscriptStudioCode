{"version":3,"sources":["PluginManager.js","PluginManager.ts"],"names":["exports","__esModule","PluginManager","module"],"mappings":"AAAA;;AACAA,QAAQC,UAAR,GAAqB,IAArB;ACoOAD,QAAA,SAAA,IAAeE,aAAf;AAEAC,OAAOH,OAAP,GAAiB,EAAEE,eAAeA,aAAjB,EAAgC,WAASA,aAAzC,EAAjB","file":"PluginManager.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports[\"default\"] = PluginManager;\nmodule.exports = { PluginManager: PluginManager, \"default\": PluginManager };\n","import ServerApi from \"./ServerApi\";\r\nimport Plugin from \"./Plugin\";\r\nimport Event from \"./events/Event\";\r\nimport * as Util from \"../../util\";\r\n\r\n/**\r\n * @class PluginManager\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.2\r\n * @version 0.0.3\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description The manager for the plugins\r\n *\r\n */\r\ndeclare class PluginManager {\r\n  static instance: PluginManager;\r\n\r\n  /**\r\n   * @var plugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description The loaded plugins\r\n   *\r\n   */\r\n  plugins: Plugin[];\r\n\r\n  /**\r\n   * @var api\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description The api\r\n   *\r\n   */\r\n  api: ServerApi;\r\n\r\n  /**\r\n   * @function constructor\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Constructor for Class PluginManager\r\n   *\r\n   */\r\n  constructor();\r\n\r\n  /**\r\n   * @function readyPluginDir\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   *\r\n   * @copyright (c) Minimine 2018\r\n   * @description makes the plugins ready\r\n   *\r\n   */\r\n  readyPluginDir(plugindir: string): void;\r\n\r\n  /**\r\n   * @function readyPlugin\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.3\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   *\r\n   * @copyright (c) Minimine 2018\r\n   * @description makes a plugin ready\r\n   *\r\n   */\r\n  readyPlugin(\r\n    plugindir: string,\r\n    plugin: string,\r\n    callback?: Util.CallbackFunction\r\n  );\r\n\r\n  /**\r\n   * @function loadPlugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   *\r\n   * @copyright (c) Minimine 2018\r\n   * @description Loads the plugins\r\n   *\r\n   */\r\n  loadPlugins(plugindir: string, callback?: Util.CallbackFunction): void;\r\n\r\n  /**\r\n   * @function loadPlugin\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Loads a Plugin\r\n   * @param plugin the Plugin to load\r\n   * @return the plugin main file default class\r\n   *\r\n   */\r\n  loadPlugin(plugindir: string, plugin: string): Plugin;\r\n\r\n  /**\r\n   * @function setupPlugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description setups the plugins\r\n   *\r\n   */\r\n  setupPlugins(): void;\r\n\r\n  /**\r\n   * @function startPlugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description Starts the plugins\r\n   *\r\n   */\r\n  startPlugins(): void;\r\n\r\n  /**\r\n   * @function stopPlugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description stops the plugins\r\n   *\r\n   */\r\n  stopPlugins(): void;\r\n\r\n  /**\r\n   * @function reloadPlugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description reloads the plugins\r\n   *\r\n   */\r\n  reloadPlugins(): void;\r\n\r\n  /**\r\n   * @function getPluginDescription\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description returns the description of a plugin\r\n   * @param plugin the Plugin to load\r\n   * @return the package.json content\r\n   *\r\n   */\r\n  getPluginDescription(plugindir: string, plugin: string): any;\r\n\r\n  /**\r\n   * @function getPlugins\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   *\r\n   * @description scans for plugins in the plugindir\r\n   * @return the plugins in the plugindir\r\n   *\r\n   */\r\n  getPlugins(plugindir): string[];\r\n\r\n  /**\r\n   * @function fireEvent\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.2\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   * @description register a listener\r\n   *\r\n   * @param event the Event to fire\r\n   */\r\n  fireEvent(event: Event): Event;\r\n\r\n  /**\r\n   * @function installPlugin\r\n   * @author Minimine <https://github.com/miniminelp>\r\n   * @since 0.0.2\r\n   * @version 0.0.3\r\n   * @license MIT\r\n   * @copyright (c) Minimine 2018\r\n   * @description install a plugin (by url into pluginfolder)\r\n   *\r\n   * @param url the url\r\n   * @param pluginfolder the pluginfoder\r\n   */\r\n  installPlugin(\r\n    url: string,\r\n    pluginfolder: string,\r\n    callback?: Util.CallbackFunction\r\n  ): boolean;\r\n}\r\n\r\nexport default PluginManager;\r\nexport { PluginManager };\r\nmodule.exports = { PluginManager: PluginManager, default: PluginManager };\r\n"]}