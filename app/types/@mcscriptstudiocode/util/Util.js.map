{"version":3,"sources":["Util.js","Util.ts"],"names":["exports","__esModule","module","guid","copyFileSync","copyFolderRecursiveSync","deleteFolderRecursive"],"mappings":"AAAA;;AACAA,QAAQC,UAAR,GAAqB,IAArB;AC8FAC,OAAOF,OAAP,GAAiB;AACfG,UAAMA,IADS;AAEfC,kBAAcA,YAFC;AAGfC,6BAAyBA,uBAHV;AAIfC,2BAAuBA;AAJR,CAAjB","file":"Util.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nmodule.exports = {\n    guid: guid,\n    copyFileSync: copyFileSync,\n    copyFolderRecursiveSync: copyFolderRecursiveSync,\n    deleteFolderRecursive: deleteFolderRecursive\n};\n","import * as fs from \"fs\";\r\n\r\n/**\r\n * @function CallbackFunction\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.3\r\n * @version 0.0.3\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description A callback function type\r\n * @param err the error (Error | undefined)\r\n * @param res the result (String | undefined)\r\n *\r\n */\r\ndeclare interface CallbackFunction {\r\n  (err?: Error | undefined, res?: any | undefined): void;\r\n}\r\n\r\n/**\r\n * @function guid\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.1\r\n * @version 0.0.1\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description returns a random uuid\r\n * @return random uuid\r\n *\r\n */\r\ndeclare function guid():string;\r\n\r\n/**\r\n * @function copyFileSync\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.3\r\n * @version 0.0.3\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description copys a file\r\n * @param source the source file\r\n * @param target the paste target\r\n *\r\n */\r\ndeclare function copyFileSync(source, target);\r\n\r\n/**\r\n * @function copyFolderRecursiveSync\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.3\r\n * @version 0.0.3\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description copys a folder recursively\r\n * @param source the source folder\r\n * @param target the paste target\r\n * @param useOldName should a sub folder created with the old name? default: true\r\n *\r\n */\r\ndeclare function copyFolderRecursiveSync(\r\n  source: string,\r\n  target: string,\r\n  useOldName?: boolean\r\n);\r\n\r\n/**\r\n * @function deleteFolderRecursive\r\n * @author Minimine <https://github.com/miniminelp>\r\n * @since 0.0.3\r\n * @version 0.0.3\r\n * @license MIT\r\n * @copyright (c) Minimine 2018\r\n *\r\n * @description deletes a folder recursively\r\n * @param path the folder to delete\r\n *\r\n */\r\ndeclare function deleteFolderRecursive(path: fs.PathLike);\r\n\r\ndeclare interface Map<V> {\r\n  [key: string]: V;\r\n}\r\n\r\nexport {\r\n  CallbackFunction,\r\n  Map,\r\n  guid,\r\n  copyFileSync,\r\n  copyFolderRecursiveSync,\r\n  deleteFolderRecursive\r\n};\r\n\r\nmodule.exports = {\r\n  guid: guid,\r\n  copyFileSync: copyFileSync,\r\n  copyFolderRecursiveSync: copyFolderRecursiveSync,\r\n  deleteFolderRecursive: deleteFolderRecursive\r\n}\r\n"]}